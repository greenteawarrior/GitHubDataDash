[{"original_position": 36, "diff_hunk": "@@ -0,0 +1,98 @@\n+package com.example.yhuang.photofeed.Database;\n+\n+import android.content.ContentValues;\n+import android.content.Context;\n+import android.database.Cursor;\n+import android.database.sqlite.SQLiteDatabase;\n+import android.database.sqlite.SQLiteOpenHelper;\n+\n+import org.apache.commons.logging.Log;\n+\n+import java.util.ArrayList;\n+\n+/**\n+ * Created by yhuang on 9/17/2015.\n+ */\n+public class PhotoHelper extends SQLiteOpenHelper {\n+    private static final int DATABASE_VERSION = 2;\n+    static final String DATABASE_NAME = \"photo.db\";\n+\n+    public PhotoHelper(Context context) {\n+        super(context, DATABASE_NAME, null, DATABASE_VERSION);\n+    }\n+\n+    @Override\n+    public void onCreate(SQLiteDatabase db) {\n+        db.execSQL(PhotoContract.SQL_CREATE_ENTRIES);\n+    }\n+\n+    @Override\n+    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {\n+        db.execSQL(PhotoContract.SQL_DELETE_ENTRIES);\n+        onCreate(db);\n+    }\n+\n+    public static void SyncWithDatabase(PhotoHelper mDbHelper, ArrayList<String> items) {\n+        SQLiteDatabase db = mDbHelper.getWritableDatabase();", "url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42180726", "created_at": "2015-10-15T21:08:32Z", "body": "You will see a performance increase if you move this line into the oncreate and only instantiate the writable database once, instead of every time you call sync.", "updated_at": "2015-10-15T21:08:32Z", "html_url": "https://github.com/OlinMobileProto/Lab2/pull/14#discussion_r42180726", "pull_request_url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/14", "_links": {"self": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42180726"}, "html": {"href": "https://github.com/OlinMobileProto/Lab2/pull/14#discussion_r42180726"}, "pull_request": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/14"}}, "commit_id": "ce3b9c124e37134d88ebfae8b8dfe06954bf51e7", "user": {"following_url": "https://api.github.com/users/dcelik/following{/other_user}", "events_url": "https://api.github.com/users/dcelik/events{/privacy}", "organizations_url": "https://api.github.com/users/dcelik/orgs", "url": "https://api.github.com/users/dcelik", "gists_url": "https://api.github.com/users/dcelik/gists{/gist_id}", "html_url": "https://github.com/dcelik", "subscriptions_url": "https://api.github.com/users/dcelik/subscriptions", "avatar_url": "https://avatars.githubusercontent.com/u/5778626?v=3", "repos_url": "https://api.github.com/users/dcelik/repos", "received_events_url": "https://api.github.com/users/dcelik/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/dcelik/starred{/owner}{/repo}", "site_admin": false, "login": "dcelik", "type": "User", "id": 5778626, "followers_url": "https://api.github.com/users/dcelik/followers"}, "path": "PhotoFeed/app/src/main/java/com/example/yhuang/photofeed/Database/PhotoHelper.java", "position": 36, "original_commit_id": "ce3b9c124e37134d88ebfae8b8dfe06954bf51e7", "id": 42180726}, {"original_position": 65, "diff_hunk": "@@ -0,0 +1,98 @@\n+package com.example.yhuang.photofeed.Database;\n+\n+import android.content.ContentValues;\n+import android.content.Context;\n+import android.database.Cursor;\n+import android.database.sqlite.SQLiteDatabase;\n+import android.database.sqlite.SQLiteOpenHelper;\n+\n+import org.apache.commons.logging.Log;\n+\n+import java.util.ArrayList;\n+\n+/**\n+ * Created by yhuang on 9/17/2015.\n+ */\n+public class PhotoHelper extends SQLiteOpenHelper {\n+    private static final int DATABASE_VERSION = 2;\n+    static final String DATABASE_NAME = \"photo.db\";\n+\n+    public PhotoHelper(Context context) {\n+        super(context, DATABASE_NAME, null, DATABASE_VERSION);\n+    }\n+\n+    @Override\n+    public void onCreate(SQLiteDatabase db) {\n+        db.execSQL(PhotoContract.SQL_CREATE_ENTRIES);\n+    }\n+\n+    @Override\n+    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {\n+        db.execSQL(PhotoContract.SQL_DELETE_ENTRIES);\n+        onCreate(db);\n+    }\n+\n+    public static void SyncWithDatabase(PhotoHelper mDbHelper, ArrayList<String> items) {\n+        SQLiteDatabase db = mDbHelper.getWritableDatabase();\n+\n+        String[] projection = {\n+                PhotoContract.PhotoEntry._ID,\n+                PhotoContract.PhotoEntry.PHOTO_SOURCE_LINK\n+        };\n+\n+        String sortOrder =\n+                PhotoContract.PhotoEntry._ID + \" DESC\";\n+\n+        Cursor cursor = db.query(\n+                PhotoContract.PhotoEntry.TABLE_NAME,  // The table to query\n+                projection,                               // The columns to return\n+                null,                                // The columns for the WHERE clause\n+                null,                            // The values for the WHERE clause\n+                null,                                     // don't group the rows\n+                null,                                     // don't filter by row groups\n+                sortOrder                                 // The sort order\n+        );\n+\n+        if (cursor.moveToFirst()) {\n+            do {\n+                items.add(cursor.getString(cursor.getColumnIndex(PhotoContract.PhotoEntry.PHOTO_SOURCE_LINK)));\n+            }\n+            while (cursor.moveToNext());\n+        }\n+    }\n+\n+    public static void WriteIntoDatabase(PhotoHelper mDbHelper, String link) {\n+        SQLiteDatabase db = mDbHelper.getWritableDatabase();", "url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42180752", "created_at": "2015-10-15T21:08:47Z", "body": "Same as with sync database comment.", "updated_at": "2015-10-15T21:08:47Z", "html_url": "https://github.com/OlinMobileProto/Lab2/pull/14#discussion_r42180752", "pull_request_url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/14", "_links": {"self": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42180752"}, "html": {"href": "https://github.com/OlinMobileProto/Lab2/pull/14#discussion_r42180752"}, "pull_request": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/14"}}, "commit_id": "ce3b9c124e37134d88ebfae8b8dfe06954bf51e7", "user": {"following_url": "https://api.github.com/users/dcelik/following{/other_user}", "events_url": "https://api.github.com/users/dcelik/events{/privacy}", "organizations_url": "https://api.github.com/users/dcelik/orgs", "url": "https://api.github.com/users/dcelik", "gists_url": "https://api.github.com/users/dcelik/gists{/gist_id}", "html_url": "https://github.com/dcelik", "subscriptions_url": "https://api.github.com/users/dcelik/subscriptions", "avatar_url": "https://avatars.githubusercontent.com/u/5778626?v=3", "repos_url": "https://api.github.com/users/dcelik/repos", "received_events_url": "https://api.github.com/users/dcelik/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/dcelik/starred{/owner}{/repo}", "site_admin": false, "login": "dcelik", "type": "User", "id": 5778626, "followers_url": "https://api.github.com/users/dcelik/followers"}, "path": "PhotoFeed/app/src/main/java/com/example/yhuang/photofeed/Database/PhotoHelper.java", "position": 65, "original_commit_id": "ce3b9c124e37134d88ebfae8b8dfe06954bf51e7", "id": 42180752}, {"original_position": 58, "diff_hunk": "@@ -0,0 +1,98 @@\n+package com.example.yhuang.photofeed.Database;\n+\n+import android.content.ContentValues;\n+import android.content.Context;\n+import android.database.Cursor;\n+import android.database.sqlite.SQLiteDatabase;\n+import android.database.sqlite.SQLiteOpenHelper;\n+\n+import org.apache.commons.logging.Log;\n+\n+import java.util.ArrayList;\n+\n+/**\n+ * Created by yhuang on 9/17/2015.\n+ */\n+public class PhotoHelper extends SQLiteOpenHelper {\n+    private static final int DATABASE_VERSION = 2;\n+    static final String DATABASE_NAME = \"photo.db\";\n+\n+    public PhotoHelper(Context context) {\n+        super(context, DATABASE_NAME, null, DATABASE_VERSION);\n+    }\n+\n+    @Override\n+    public void onCreate(SQLiteDatabase db) {\n+        db.execSQL(PhotoContract.SQL_CREATE_ENTRIES);\n+    }\n+\n+    @Override\n+    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {\n+        db.execSQL(PhotoContract.SQL_DELETE_ENTRIES);\n+        onCreate(db);\n+    }\n+\n+    public static void SyncWithDatabase(PhotoHelper mDbHelper, ArrayList<String> items) {\n+        SQLiteDatabase db = mDbHelper.getWritableDatabase();\n+\n+        String[] projection = {\n+                PhotoContract.PhotoEntry._ID,\n+                PhotoContract.PhotoEntry.PHOTO_SOURCE_LINK\n+        };\n+\n+        String sortOrder =\n+                PhotoContract.PhotoEntry._ID + \" DESC\";\n+\n+        Cursor cursor = db.query(\n+                PhotoContract.PhotoEntry.TABLE_NAME,  // The table to query\n+                projection,                               // The columns to return\n+                null,                                // The columns for the WHERE clause\n+                null,                            // The values for the WHERE clause\n+                null,                                     // don't group the rows\n+                null,                                     // don't filter by row groups\n+                sortOrder                                 // The sort order\n+        );\n+\n+        if (cursor.moveToFirst()) {\n+            do {\n+                items.add(cursor.getString(cursor.getColumnIndex(PhotoContract.PhotoEntry.PHOTO_SOURCE_LINK)));", "url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42180777", "created_at": "2015-10-15T21:09:05Z", "body": "Nice way of getting the string!", "updated_at": "2015-10-15T21:09:05Z", "html_url": "https://github.com/OlinMobileProto/Lab2/pull/14#discussion_r42180777", "pull_request_url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/14", "_links": {"self": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42180777"}, "html": {"href": "https://github.com/OlinMobileProto/Lab2/pull/14#discussion_r42180777"}, "pull_request": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/14"}}, "commit_id": "ce3b9c124e37134d88ebfae8b8dfe06954bf51e7", "user": {"following_url": "https://api.github.com/users/dcelik/following{/other_user}", "events_url": "https://api.github.com/users/dcelik/events{/privacy}", "organizations_url": "https://api.github.com/users/dcelik/orgs", "url": "https://api.github.com/users/dcelik", "gists_url": "https://api.github.com/users/dcelik/gists{/gist_id}", "html_url": "https://github.com/dcelik", "subscriptions_url": "https://api.github.com/users/dcelik/subscriptions", "avatar_url": "https://avatars.githubusercontent.com/u/5778626?v=3", "repos_url": "https://api.github.com/users/dcelik/repos", "received_events_url": "https://api.github.com/users/dcelik/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/dcelik/starred{/owner}{/repo}", "site_admin": false, "login": "dcelik", "type": "User", "id": 5778626, "followers_url": "https://api.github.com/users/dcelik/followers"}, "path": "PhotoFeed/app/src/main/java/com/example/yhuang/photofeed/Database/PhotoHelper.java", "position": 58, "original_commit_id": "ce3b9c124e37134d88ebfae8b8dfe06954bf51e7", "id": 42180777}, {"original_position": 80, "diff_hunk": "@@ -0,0 +1,98 @@\n+package com.example.yhuang.photofeed.Database;\n+\n+import android.content.ContentValues;\n+import android.content.Context;\n+import android.database.Cursor;\n+import android.database.sqlite.SQLiteDatabase;\n+import android.database.sqlite.SQLiteOpenHelper;\n+\n+import org.apache.commons.logging.Log;\n+\n+import java.util.ArrayList;\n+\n+/**\n+ * Created by yhuang on 9/17/2015.\n+ */\n+public class PhotoHelper extends SQLiteOpenHelper {\n+    private static final int DATABASE_VERSION = 2;\n+    static final String DATABASE_NAME = \"photo.db\";\n+\n+    public PhotoHelper(Context context) {\n+        super(context, DATABASE_NAME, null, DATABASE_VERSION);\n+    }\n+\n+    @Override\n+    public void onCreate(SQLiteDatabase db) {\n+        db.execSQL(PhotoContract.SQL_CREATE_ENTRIES);\n+    }\n+\n+    @Override\n+    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {\n+        db.execSQL(PhotoContract.SQL_DELETE_ENTRIES);\n+        onCreate(db);\n+    }\n+\n+    public static void SyncWithDatabase(PhotoHelper mDbHelper, ArrayList<String> items) {\n+        SQLiteDatabase db = mDbHelper.getWritableDatabase();\n+\n+        String[] projection = {\n+                PhotoContract.PhotoEntry._ID,\n+                PhotoContract.PhotoEntry.PHOTO_SOURCE_LINK\n+        };\n+\n+        String sortOrder =\n+                PhotoContract.PhotoEntry._ID + \" DESC\";\n+\n+        Cursor cursor = db.query(\n+                PhotoContract.PhotoEntry.TABLE_NAME,  // The table to query\n+                projection,                               // The columns to return\n+                null,                                // The columns for the WHERE clause\n+                null,                            // The values for the WHERE clause\n+                null,                                     // don't group the rows\n+                null,                                     // don't filter by row groups\n+                sortOrder                                 // The sort order\n+        );\n+\n+        if (cursor.moveToFirst()) {\n+            do {\n+                items.add(cursor.getString(cursor.getColumnIndex(PhotoContract.PhotoEntry.PHOTO_SOURCE_LINK)));\n+            }\n+            while (cursor.moveToNext());\n+        }\n+    }\n+\n+    public static void WriteIntoDatabase(PhotoHelper mDbHelper, String link) {\n+        SQLiteDatabase db = mDbHelper.getWritableDatabase();\n+        ContentValues values = new ContentValues();\n+        values.put(PhotoContract.PhotoEntry.PHOTO_SOURCE_LINK, link);\n+        Cursor c = db.rawQuery(\n+                \"SELECT * FROM \" + PhotoContract.PhotoEntry.TABLE_NAME, null\n+        );\n+\n+        boolean flag = false;\n+\n+        while(c.moveToNext())\n+        {\n+            if(c.getString(c.getColumnIndex(PhotoContract.PhotoEntry.PHOTO_SOURCE_LINK)).equals(link))\n+            {\n+                flag = true;\n+            }\n+        }", "url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42180935", "created_at": "2015-10-15T21:10:16Z", "body": "I like this checking of duplicates a lot, very good intuition.", "updated_at": "2015-10-15T21:10:16Z", "html_url": "https://github.com/OlinMobileProto/Lab2/pull/14#discussion_r42180935", "pull_request_url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/14", "_links": {"self": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42180935"}, "html": {"href": "https://github.com/OlinMobileProto/Lab2/pull/14#discussion_r42180935"}, "pull_request": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/14"}}, "commit_id": "ce3b9c124e37134d88ebfae8b8dfe06954bf51e7", "user": {"following_url": "https://api.github.com/users/dcelik/following{/other_user}", "events_url": "https://api.github.com/users/dcelik/events{/privacy}", "organizations_url": "https://api.github.com/users/dcelik/orgs", "url": "https://api.github.com/users/dcelik", "gists_url": "https://api.github.com/users/dcelik/gists{/gist_id}", "html_url": "https://github.com/dcelik", "subscriptions_url": "https://api.github.com/users/dcelik/subscriptions", "avatar_url": "https://avatars.githubusercontent.com/u/5778626?v=3", "repos_url": "https://api.github.com/users/dcelik/repos", "received_events_url": "https://api.github.com/users/dcelik/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/dcelik/starred{/owner}{/repo}", "site_admin": false, "login": "dcelik", "type": "User", "id": 5778626, "followers_url": "https://api.github.com/users/dcelik/followers"}, "path": "PhotoFeed/app/src/main/java/com/example/yhuang/photofeed/Database/PhotoHelper.java", "position": 80, "original_commit_id": "ce3b9c124e37134d88ebfae8b8dfe06954bf51e7", "id": 42180935}, {"original_position": 96, "diff_hunk": "@@ -0,0 +1,98 @@\n+package com.example.yhuang.photofeed.Database;\n+\n+import android.content.ContentValues;\n+import android.content.Context;\n+import android.database.Cursor;\n+import android.database.sqlite.SQLiteDatabase;\n+import android.database.sqlite.SQLiteOpenHelper;\n+\n+import org.apache.commons.logging.Log;\n+\n+import java.util.ArrayList;\n+\n+/**\n+ * Created by yhuang on 9/17/2015.\n+ */\n+public class PhotoHelper extends SQLiteOpenHelper {\n+    private static final int DATABASE_VERSION = 2;\n+    static final String DATABASE_NAME = \"photo.db\";\n+\n+    public PhotoHelper(Context context) {\n+        super(context, DATABASE_NAME, null, DATABASE_VERSION);\n+    }\n+\n+    @Override\n+    public void onCreate(SQLiteDatabase db) {\n+        db.execSQL(PhotoContract.SQL_CREATE_ENTRIES);\n+    }\n+\n+    @Override\n+    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {\n+        db.execSQL(PhotoContract.SQL_DELETE_ENTRIES);\n+        onCreate(db);\n+    }\n+\n+    public static void SyncWithDatabase(PhotoHelper mDbHelper, ArrayList<String> items) {\n+        SQLiteDatabase db = mDbHelper.getWritableDatabase();\n+\n+        String[] projection = {\n+                PhotoContract.PhotoEntry._ID,\n+                PhotoContract.PhotoEntry.PHOTO_SOURCE_LINK\n+        };\n+\n+        String sortOrder =\n+                PhotoContract.PhotoEntry._ID + \" DESC\";\n+\n+        Cursor cursor = db.query(\n+                PhotoContract.PhotoEntry.TABLE_NAME,  // The table to query\n+                projection,                               // The columns to return\n+                null,                                // The columns for the WHERE clause\n+                null,                            // The values for the WHERE clause\n+                null,                                     // don't group the rows\n+                null,                                     // don't filter by row groups\n+                sortOrder                                 // The sort order\n+        );\n+\n+        if (cursor.moveToFirst()) {\n+            do {\n+                items.add(cursor.getString(cursor.getColumnIndex(PhotoContract.PhotoEntry.PHOTO_SOURCE_LINK)));\n+            }\n+            while (cursor.moveToNext());\n+        }\n+    }\n+\n+    public static void WriteIntoDatabase(PhotoHelper mDbHelper, String link) {\n+        SQLiteDatabase db = mDbHelper.getWritableDatabase();\n+        ContentValues values = new ContentValues();\n+        values.put(PhotoContract.PhotoEntry.PHOTO_SOURCE_LINK, link);\n+        Cursor c = db.rawQuery(\n+                \"SELECT * FROM \" + PhotoContract.PhotoEntry.TABLE_NAME, null\n+        );\n+\n+        boolean flag = false;\n+\n+        while(c.moveToNext())\n+        {\n+            if(c.getString(c.getColumnIndex(PhotoContract.PhotoEntry.PHOTO_SOURCE_LINK)).equals(link))\n+            {\n+                flag = true;\n+            }\n+        }\n+\n+        if (!flag) {\n+            db.insert(\n+                    PhotoContract.PhotoEntry.TABLE_NAME,\n+                    null,\n+                    values);\n+        }\n+    }\n+\n+    public static void DeleteItemDatabase(PhotoHelper mDbHelper, String link) {\n+        SQLiteDatabase db = mDbHelper.getWritableDatabase();\n+\n+        String selection = PhotoContract.PhotoEntry.PHOTO_SOURCE_LINK + \" LIKE ?\";\n+        String[] selectionArgs = { link };\n+        db.delete(PhotoContract.PhotoEntry.TABLE_NAME, selection, selectionArgs);\n+    }", "url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42181006", "created_at": "2015-10-15T21:10:49Z", "body": "The lack of duplicates makes this delete code work perfectly without assumptions. Love it.", "updated_at": "2015-10-15T21:10:49Z", "html_url": "https://github.com/OlinMobileProto/Lab2/pull/14#discussion_r42181006", "pull_request_url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/14", "_links": {"self": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42181006"}, "html": {"href": "https://github.com/OlinMobileProto/Lab2/pull/14#discussion_r42181006"}, "pull_request": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/14"}}, "commit_id": "ce3b9c124e37134d88ebfae8b8dfe06954bf51e7", "user": {"following_url": "https://api.github.com/users/dcelik/following{/other_user}", "events_url": "https://api.github.com/users/dcelik/events{/privacy}", "organizations_url": "https://api.github.com/users/dcelik/orgs", "url": "https://api.github.com/users/dcelik", "gists_url": "https://api.github.com/users/dcelik/gists{/gist_id}", "html_url": "https://github.com/dcelik", "subscriptions_url": "https://api.github.com/users/dcelik/subscriptions", "avatar_url": "https://avatars.githubusercontent.com/u/5778626?v=3", "repos_url": "https://api.github.com/users/dcelik/repos", "received_events_url": "https://api.github.com/users/dcelik/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/dcelik/starred{/owner}{/repo}", "site_admin": false, "login": "dcelik", "type": "User", "id": 5778626, "followers_url": "https://api.github.com/users/dcelik/followers"}, "path": "PhotoFeed/app/src/main/java/com/example/yhuang/photofeed/Database/PhotoHelper.java", "position": 96, "original_commit_id": "ce3b9c124e37134d88ebfae8b8dfe06954bf51e7", "id": 42181006}, {"original_position": 30, "diff_hunk": "@@ -0,0 +1,62 @@\n+package com.example.yhuang.photofeed.HttpRequest;\n+\n+import android.content.Context;\n+import android.util.Log;\n+\n+import com.android.volley.Request;\n+import com.android.volley.RequestQueue;\n+import com.android.volley.Response;\n+import com.android.volley.VolleyError;\n+import com.android.volley.toolbox.JsonObjectRequest;\n+import com.android.volley.toolbox.Volley;\n+\n+import org.json.JSONObject;\n+\n+/**\n+ * Created by yhuang on 9/17/2015.\n+ */\n+public class HttpHandler {\n+\n+    public RequestQueue queue;\n+\n+    public HttpHandler(Context context) {\n+        queue = Volley.newRequestQueue(context);\n+    }\n+\n+    public void searchWithCallback(String searchQuery, final SuccessCallback callback) {\n+        String query =searchQuery.replaceAll(\" \", \"+\");\n+        final String key = \"AIzaSyD5I9oSv9hw5CLfnZLy-bTOHMpJpsrRxwI\";\n+        final String cx = \"004900652497093970773:3gxd_h1qem0\";\n+        final String searchType = \"image\";", "url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42181025", "created_at": "2015-10-15T21:10:59Z", "body": "Great use of final", "updated_at": "2015-10-15T21:10:59Z", "html_url": "https://github.com/OlinMobileProto/Lab2/pull/14#discussion_r42181025", "pull_request_url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/14", "_links": {"self": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42181025"}, "html": {"href": "https://github.com/OlinMobileProto/Lab2/pull/14#discussion_r42181025"}, "pull_request": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/14"}}, "commit_id": "ce3b9c124e37134d88ebfae8b8dfe06954bf51e7", "user": {"following_url": "https://api.github.com/users/dcelik/following{/other_user}", "events_url": "https://api.github.com/users/dcelik/events{/privacy}", "organizations_url": "https://api.github.com/users/dcelik/orgs", "url": "https://api.github.com/users/dcelik", "gists_url": "https://api.github.com/users/dcelik/gists{/gist_id}", "html_url": "https://github.com/dcelik", "subscriptions_url": "https://api.github.com/users/dcelik/subscriptions", "avatar_url": "https://avatars.githubusercontent.com/u/5778626?v=3", "repos_url": "https://api.github.com/users/dcelik/repos", "received_events_url": "https://api.github.com/users/dcelik/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/dcelik/starred{/owner}{/repo}", "site_admin": false, "login": "dcelik", "type": "User", "id": 5778626, "followers_url": "https://api.github.com/users/dcelik/followers"}, "path": "PhotoFeed/app/src/main/java/com/example/yhuang/photofeed/HttpRequest/HttpHandler.java", "position": 30, "original_commit_id": "ce3b9c124e37134d88ebfae8b8dfe06954bf51e7", "id": 42181025}, {"original_position": 15, "diff_hunk": "@@ -0,0 +1,46 @@\n+package com.example.yhuang.photofeed.HttpRequest;\n+\n+import android.graphics.Bitmap;\n+import android.graphics.BitmapFactory;\n+import android.os.AsyncTask;\n+import android.widget.ImageView;\n+\n+import java.io.InputStream;\n+import java.net.HttpURLConnection;\n+import java.net.URL;\n+\n+/**\n+ * Created by yhuang on 9/26/2015.\n+ */\n+public class ImageLoadTask extends AsyncTask<Void, Void, Bitmap> {", "url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42181062", "created_at": "2015-10-15T21:11:18Z", "body": "Nice use of AsyncTask", "updated_at": "2015-10-15T21:11:18Z", "html_url": "https://github.com/OlinMobileProto/Lab2/pull/14#discussion_r42181062", "pull_request_url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/14", "_links": {"self": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42181062"}, "html": {"href": "https://github.com/OlinMobileProto/Lab2/pull/14#discussion_r42181062"}, "pull_request": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/14"}}, "commit_id": "ce3b9c124e37134d88ebfae8b8dfe06954bf51e7", "user": {"following_url": "https://api.github.com/users/dcelik/following{/other_user}", "events_url": "https://api.github.com/users/dcelik/events{/privacy}", "organizations_url": "https://api.github.com/users/dcelik/orgs", "url": "https://api.github.com/users/dcelik", "gists_url": "https://api.github.com/users/dcelik/gists{/gist_id}", "html_url": "https://github.com/dcelik", "subscriptions_url": "https://api.github.com/users/dcelik/subscriptions", "avatar_url": "https://avatars.githubusercontent.com/u/5778626?v=3", "repos_url": "https://api.github.com/users/dcelik/repos", "received_events_url": "https://api.github.com/users/dcelik/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/dcelik/starred{/owner}{/repo}", "site_admin": false, "login": "dcelik", "type": "User", "id": 5778626, "followers_url": "https://api.github.com/users/dcelik/followers"}, "path": "PhotoFeed/app/src/main/java/com/example/yhuang/photofeed/HttpRequest/ImageLoadTask.java", "position": 15, "original_commit_id": "ce3b9c124e37134d88ebfae8b8dfe06954bf51e7", "id": 42181062}, {"original_position": 38, "diff_hunk": "@@ -0,0 +1,46 @@\n+package com.example.yhuang.photofeed.HttpRequest;\n+\n+import android.graphics.Bitmap;\n+import android.graphics.BitmapFactory;\n+import android.os.AsyncTask;\n+import android.widget.ImageView;\n+\n+import java.io.InputStream;\n+import java.net.HttpURLConnection;\n+import java.net.URL;\n+\n+/**\n+ * Created by yhuang on 9/26/2015.\n+ */\n+public class ImageLoadTask extends AsyncTask<Void, Void, Bitmap> {\n+    private String url;\n+    private ImageView imageView;\n+\n+    public ImageLoadTask(String url, ImageView imageView) {\n+        this.url = url;\n+        this.imageView = imageView;\n+    }\n+\n+    @Override\n+    protected Bitmap doInBackground(Void... params) {\n+        try {\n+            URL urlConnection = new URL(url);\n+            HttpURLConnection connection = (HttpURLConnection) urlConnection\n+                    .openConnection();\n+            connection.setDoInput(true);\n+            connection.connect();\n+            InputStream input = connection.getInputStream();\n+            Bitmap myBitmap = BitmapFactory.decodeStream(input);\n+            return myBitmap;\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+        }\n+        return null;", "url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42181126", "created_at": "2015-10-15T21:11:51Z", "body": "You could move this null inside the try for more clarity and the code will function the same way.", "updated_at": "2015-10-15T21:11:51Z", "html_url": "https://github.com/OlinMobileProto/Lab2/pull/14#discussion_r42181126", "pull_request_url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/14", "_links": {"self": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42181126"}, "html": {"href": "https://github.com/OlinMobileProto/Lab2/pull/14#discussion_r42181126"}, "pull_request": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/14"}}, "commit_id": "ce3b9c124e37134d88ebfae8b8dfe06954bf51e7", "user": {"following_url": "https://api.github.com/users/dcelik/following{/other_user}", "events_url": "https://api.github.com/users/dcelik/events{/privacy}", "organizations_url": "https://api.github.com/users/dcelik/orgs", "url": "https://api.github.com/users/dcelik", "gists_url": "https://api.github.com/users/dcelik/gists{/gist_id}", "html_url": "https://github.com/dcelik", "subscriptions_url": "https://api.github.com/users/dcelik/subscriptions", "avatar_url": "https://avatars.githubusercontent.com/u/5778626?v=3", "repos_url": "https://api.github.com/users/dcelik/repos", "received_events_url": "https://api.github.com/users/dcelik/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/dcelik/starred{/owner}{/repo}", "site_admin": false, "login": "dcelik", "type": "User", "id": 5778626, "followers_url": "https://api.github.com/users/dcelik/followers"}, "path": "PhotoFeed/app/src/main/java/com/example/yhuang/photofeed/HttpRequest/ImageLoadTask.java", "position": 38, "original_commit_id": "ce3b9c124e37134d88ebfae8b8dfe06954bf51e7", "id": 42181126}, {"original_position": 33, "diff_hunk": "@@ -0,0 +1,212 @@\n+package com.example.yhuang.photofeed;\n+\n+import android.support.v7.app.AppCompatActivity;\n+import android.os.Bundle;\n+import android.util.Log;\n+import android.view.Menu;\n+import android.view.MenuItem;\n+import android.view.View;\n+import android.widget.Button;\n+import android.widget.EditText;\n+import android.widget.ImageView;\n+import android.widget.Toast;\n+\n+import com.example.yhuang.photofeed.Database.PhotoHelper;\n+import com.example.yhuang.photofeed.HttpRequest.HttpHandler;\n+import com.example.yhuang.photofeed.HttpRequest.ImageLoadTask;\n+import com.example.yhuang.photofeed.HttpRequest.SuccessCallback;\n+\n+import org.json.JSONArray;\n+import org.json.JSONObject;\n+\n+import java.util.ArrayList;\n+\n+public class MainActivity extends AppCompatActivity {\n+    EditText editText;\n+    Button search;\n+    Button pre;\n+    Button next;\n+    Button feed;\n+    Button delete;\n+    ImageView imageview;\n+    ArrayList<String> items;\n+    PhotoHelper mDbHelper;", "url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42181368", "created_at": "2015-10-15T21:14:06Z", "body": "Making these private will make your application more secure.", "updated_at": "2015-10-15T21:14:06Z", "html_url": "https://github.com/OlinMobileProto/Lab2/pull/14#discussion_r42181368", "pull_request_url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/14", "_links": {"self": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42181368"}, "html": {"href": "https://github.com/OlinMobileProto/Lab2/pull/14#discussion_r42181368"}, "pull_request": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/14"}}, "commit_id": "ce3b9c124e37134d88ebfae8b8dfe06954bf51e7", "user": {"following_url": "https://api.github.com/users/dcelik/following{/other_user}", "events_url": "https://api.github.com/users/dcelik/events{/privacy}", "organizations_url": "https://api.github.com/users/dcelik/orgs", "url": "https://api.github.com/users/dcelik", "gists_url": "https://api.github.com/users/dcelik/gists{/gist_id}", "html_url": "https://github.com/dcelik", "subscriptions_url": "https://api.github.com/users/dcelik/subscriptions", "avatar_url": "https://avatars.githubusercontent.com/u/5778626?v=3", "repos_url": "https://api.github.com/users/dcelik/repos", "received_events_url": "https://api.github.com/users/dcelik/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/dcelik/starred{/owner}{/repo}", "site_admin": false, "login": "dcelik", "type": "User", "id": 5778626, "followers_url": "https://api.github.com/users/dcelik/followers"}, "path": "PhotoFeed/app/src/main/java/com/example/yhuang/photofeed/MainActivity.java", "position": 33, "original_commit_id": "ce3b9c124e37134d88ebfae8b8dfe06954bf51e7", "id": 42181368}, {"original_position": 115, "diff_hunk": "@@ -0,0 +1,212 @@\n+package com.example.yhuang.photofeed;\n+\n+import android.support.v7.app.AppCompatActivity;\n+import android.os.Bundle;\n+import android.util.Log;\n+import android.view.Menu;\n+import android.view.MenuItem;\n+import android.view.View;\n+import android.widget.Button;\n+import android.widget.EditText;\n+import android.widget.ImageView;\n+import android.widget.Toast;\n+\n+import com.example.yhuang.photofeed.Database.PhotoHelper;\n+import com.example.yhuang.photofeed.HttpRequest.HttpHandler;\n+import com.example.yhuang.photofeed.HttpRequest.ImageLoadTask;\n+import com.example.yhuang.photofeed.HttpRequest.SuccessCallback;\n+\n+import org.json.JSONArray;\n+import org.json.JSONObject;\n+\n+import java.util.ArrayList;\n+\n+public class MainActivity extends AppCompatActivity {\n+    EditText editText;\n+    Button search;\n+    Button pre;\n+    Button next;\n+    Button feed;\n+    Button delete;\n+    ImageView imageview;\n+    ArrayList<String> items;\n+    PhotoHelper mDbHelper;\n+\n+    private int cur_page = 0;\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.activity_main);\n+\n+        //initiating values to variables\n+        items = new ArrayList<>();\n+        editText = (EditText) findViewById(R.id.editText);\n+        search = (Button) findViewById(R.id.button);\n+        pre = (Button) findViewById(R.id.pre_btn);\n+        next = (Button) findViewById(R.id.next_btn);\n+        feed = (Button) findViewById(R.id.feed_btn);\n+        delete = (Button) findViewById(R.id.delete);\n+        imageview = (ImageView) findViewById(R.id.imageView);\n+        mDbHelper = new PhotoHelper(this);\n+\n+        //open the search page\n+        openSearch();\n+\n+        //set onClickListeners to the buttons\n+        search.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                //Get the search text in edit text\n+                String searchText = editText.getText().toString();\n+                makeRequestWithCallback(searchText, items);\n+                editText.setText(\"\");\n+            }\n+        });\n+\n+        pre.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                if (!items.isEmpty() && cur_page > 0) {\n+                    cur_page -= 1;\n+                    new ImageLoadTask(items.get(cur_page), imageview).execute();\n+                } else {\n+                    Toast.makeText(getApplicationContext(), \"Already the first page.\", Toast.LENGTH_SHORT).show();\n+                }\n+            }\n+        });\n+\n+        next.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                if (!items.isEmpty() && cur_page < items.size() - 1) {\n+                    cur_page += 1;\n+                    new ImageLoadTask(items.get(cur_page), imageview).execute();\n+                } else {\n+                    Toast.makeText(getApplicationContext(), \"Already the last page.\", Toast.LENGTH_SHORT).show();\n+                }\n+            }\n+        });\n+\n+        feed.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                if (!items.isEmpty()) {\n+                    PhotoHelper.WriteIntoDatabase(mDbHelper, items.get(cur_page));\n+                    Toast.makeText(getApplicationContext(), \"Added to feed\", Toast.LENGTH_SHORT).show();\n+                } else {\n+                    Toast.makeText(getApplicationContext(), \"Nothing to feed\", Toast.LENGTH_SHORT).show();\n+                }\n+            }\n+        });\n+\n+        delete.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                if (!items.isEmpty()) {\n+                    PhotoHelper.DeleteItemDatabase(mDbHelper, items.get(cur_page));\n+                    Toast.makeText(getApplicationContext(), \"Deleted from feed\", Toast.LENGTH_SHORT).show();\n+                    openMyFeed();\n+                } else {\n+                    Toast.makeText(getApplicationContext(), \"Nothing to delete\", Toast.LENGTH_SHORT).show();\n+                }\n+            }\n+        });\n+    }", "url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42181436", "created_at": "2015-10-15T21:14:46Z", "body": "Moving the onclicklisteners to a seperate file or class could be useful for clarity. Also nice use of toasts.", "updated_at": "2015-10-15T21:14:46Z", "html_url": "https://github.com/OlinMobileProto/Lab2/pull/14#discussion_r42181436", "pull_request_url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/14", "_links": {"self": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42181436"}, "html": {"href": "https://github.com/OlinMobileProto/Lab2/pull/14#discussion_r42181436"}, "pull_request": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/14"}}, "commit_id": "ce3b9c124e37134d88ebfae8b8dfe06954bf51e7", "user": {"following_url": "https://api.github.com/users/dcelik/following{/other_user}", "events_url": "https://api.github.com/users/dcelik/events{/privacy}", "organizations_url": "https://api.github.com/users/dcelik/orgs", "url": "https://api.github.com/users/dcelik", "gists_url": "https://api.github.com/users/dcelik/gists{/gist_id}", "html_url": "https://github.com/dcelik", "subscriptions_url": "https://api.github.com/users/dcelik/subscriptions", "avatar_url": "https://avatars.githubusercontent.com/u/5778626?v=3", "repos_url": "https://api.github.com/users/dcelik/repos", "received_events_url": "https://api.github.com/users/dcelik/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/dcelik/starred{/owner}{/repo}", "site_admin": false, "login": "dcelik", "type": "User", "id": 5778626, "followers_url": "https://api.github.com/users/dcelik/followers"}, "path": "PhotoFeed/app/src/main/java/com/example/yhuang/photofeed/MainActivity.java", "position": 115, "original_commit_id": "ce3b9c124e37134d88ebfae8b8dfe06954bf51e7", "id": 42181436}, {"original_position": 153, "diff_hunk": "@@ -0,0 +1,212 @@\n+package com.example.yhuang.photofeed;\n+\n+import android.support.v7.app.AppCompatActivity;\n+import android.os.Bundle;\n+import android.util.Log;\n+import android.view.Menu;\n+import android.view.MenuItem;\n+import android.view.View;\n+import android.widget.Button;\n+import android.widget.EditText;\n+import android.widget.ImageView;\n+import android.widget.Toast;\n+\n+import com.example.yhuang.photofeed.Database.PhotoHelper;\n+import com.example.yhuang.photofeed.HttpRequest.HttpHandler;\n+import com.example.yhuang.photofeed.HttpRequest.ImageLoadTask;\n+import com.example.yhuang.photofeed.HttpRequest.SuccessCallback;\n+\n+import org.json.JSONArray;\n+import org.json.JSONObject;\n+\n+import java.util.ArrayList;\n+\n+public class MainActivity extends AppCompatActivity {\n+    EditText editText;\n+    Button search;\n+    Button pre;\n+    Button next;\n+    Button feed;\n+    Button delete;\n+    ImageView imageview;\n+    ArrayList<String> items;\n+    PhotoHelper mDbHelper;\n+\n+    private int cur_page = 0;\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.activity_main);\n+\n+        //initiating values to variables\n+        items = new ArrayList<>();\n+        editText = (EditText) findViewById(R.id.editText);\n+        search = (Button) findViewById(R.id.button);\n+        pre = (Button) findViewById(R.id.pre_btn);\n+        next = (Button) findViewById(R.id.next_btn);\n+        feed = (Button) findViewById(R.id.feed_btn);\n+        delete = (Button) findViewById(R.id.delete);\n+        imageview = (ImageView) findViewById(R.id.imageView);\n+        mDbHelper = new PhotoHelper(this);\n+\n+        //open the search page\n+        openSearch();\n+\n+        //set onClickListeners to the buttons\n+        search.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                //Get the search text in edit text\n+                String searchText = editText.getText().toString();\n+                makeRequestWithCallback(searchText, items);\n+                editText.setText(\"\");\n+            }\n+        });\n+\n+        pre.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                if (!items.isEmpty() && cur_page > 0) {\n+                    cur_page -= 1;\n+                    new ImageLoadTask(items.get(cur_page), imageview).execute();\n+                } else {\n+                    Toast.makeText(getApplicationContext(), \"Already the first page.\", Toast.LENGTH_SHORT).show();\n+                }\n+            }\n+        });\n+\n+        next.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                if (!items.isEmpty() && cur_page < items.size() - 1) {\n+                    cur_page += 1;\n+                    new ImageLoadTask(items.get(cur_page), imageview).execute();\n+                } else {\n+                    Toast.makeText(getApplicationContext(), \"Already the last page.\", Toast.LENGTH_SHORT).show();\n+                }\n+            }\n+        });\n+\n+        feed.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                if (!items.isEmpty()) {\n+                    PhotoHelper.WriteIntoDatabase(mDbHelper, items.get(cur_page));\n+                    Toast.makeText(getApplicationContext(), \"Added to feed\", Toast.LENGTH_SHORT).show();\n+                } else {\n+                    Toast.makeText(getApplicationContext(), \"Nothing to feed\", Toast.LENGTH_SHORT).show();\n+                }\n+            }\n+        });\n+\n+        delete.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                if (!items.isEmpty()) {\n+                    PhotoHelper.DeleteItemDatabase(mDbHelper, items.get(cur_page));\n+                    Toast.makeText(getApplicationContext(), \"Deleted from feed\", Toast.LENGTH_SHORT).show();\n+                    openMyFeed();\n+                } else {\n+                    Toast.makeText(getApplicationContext(), \"Nothing to delete\", Toast.LENGTH_SHORT).show();\n+                }\n+            }\n+        });\n+    }\n+\n+    @Override\n+    public boolean onCreateOptionsMenu(Menu menu) {\n+        // Inflate the menu; this adds items to the action bar if it is present.\n+        getMenuInflater().inflate(R.menu.menu_main, menu);\n+        return super.onCreateOptionsMenu(menu);\n+    }\n+\n+    @Override\n+    public boolean onOptionsItemSelected(MenuItem item) {\n+        // Handle action bar item clicks here. The action bar will\n+        // automatically handle clicks on the Home/Up button, so long\n+        // as you specify a parent activity in AndroidManifest.xml.\n+        // Handle presses on the action bar items\n+        switch (item.getItemId()) {\n+            case R.id.action_feed:\n+                openMyFeed();\n+                return true;\n+            case R.id.action_search:\n+                openSearch();\n+                return true;\n+            default:\n+                return super.onOptionsItemSelected(item);\n+        }\n+    }\n+\n+    /**\n+     * the openSearch() method clears the current displaying data and opens the search page\n+     */\n+    public void openSearch() {\n+        delete.setVisibility(View.GONE);\n+        feed.setVisibility(View.VISIBLE);\n+        editText.setVisibility(View.VISIBLE);\n+        search.setVisibility(View.VISIBLE);\n+        cur_page = 0;\n+        items.clear();\n+        imageview.setImageResource(0);\n+    }", "url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42181566", "created_at": "2015-10-15T21:15:56Z", "body": "Interesting non-fragment switching way of doing this. Thanks for letting us know about that ahead of time! As long as you understand how to do actual fragment switching this is perfect! @YuzhongHuang ", "updated_at": "2015-10-15T21:15:56Z", "html_url": "https://github.com/OlinMobileProto/Lab2/pull/14#discussion_r42181566", "pull_request_url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/14", "_links": {"self": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42181566"}, "html": {"href": "https://github.com/OlinMobileProto/Lab2/pull/14#discussion_r42181566"}, "pull_request": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/14"}}, "commit_id": "ce3b9c124e37134d88ebfae8b8dfe06954bf51e7", "user": {"following_url": "https://api.github.com/users/dcelik/following{/other_user}", "events_url": "https://api.github.com/users/dcelik/events{/privacy}", "organizations_url": "https://api.github.com/users/dcelik/orgs", "url": "https://api.github.com/users/dcelik", "gists_url": "https://api.github.com/users/dcelik/gists{/gist_id}", "html_url": "https://github.com/dcelik", "subscriptions_url": "https://api.github.com/users/dcelik/subscriptions", "avatar_url": "https://avatars.githubusercontent.com/u/5778626?v=3", "repos_url": "https://api.github.com/users/dcelik/repos", "received_events_url": "https://api.github.com/users/dcelik/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/dcelik/starred{/owner}{/repo}", "site_admin": false, "login": "dcelik", "type": "User", "id": 5778626, "followers_url": "https://api.github.com/users/dcelik/followers"}, "path": "PhotoFeed/app/src/main/java/com/example/yhuang/photofeed/MainActivity.java", "position": 153, "original_commit_id": "ce3b9c124e37134d88ebfae8b8dfe06954bf51e7", "id": 42181566}, {"original_position": 208, "diff_hunk": "@@ -0,0 +1,212 @@\n+package com.example.yhuang.photofeed;\n+\n+import android.support.v7.app.AppCompatActivity;\n+import android.os.Bundle;\n+import android.util.Log;\n+import android.view.Menu;\n+import android.view.MenuItem;\n+import android.view.View;\n+import android.widget.Button;\n+import android.widget.EditText;\n+import android.widget.ImageView;\n+import android.widget.Toast;\n+\n+import com.example.yhuang.photofeed.Database.PhotoHelper;\n+import com.example.yhuang.photofeed.HttpRequest.HttpHandler;\n+import com.example.yhuang.photofeed.HttpRequest.ImageLoadTask;\n+import com.example.yhuang.photofeed.HttpRequest.SuccessCallback;\n+\n+import org.json.JSONArray;\n+import org.json.JSONObject;\n+\n+import java.util.ArrayList;\n+\n+public class MainActivity extends AppCompatActivity {\n+    EditText editText;\n+    Button search;\n+    Button pre;\n+    Button next;\n+    Button feed;\n+    Button delete;\n+    ImageView imageview;\n+    ArrayList<String> items;\n+    PhotoHelper mDbHelper;\n+\n+    private int cur_page = 0;\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        setContentView(R.layout.activity_main);\n+\n+        //initiating values to variables\n+        items = new ArrayList<>();\n+        editText = (EditText) findViewById(R.id.editText);\n+        search = (Button) findViewById(R.id.button);\n+        pre = (Button) findViewById(R.id.pre_btn);\n+        next = (Button) findViewById(R.id.next_btn);\n+        feed = (Button) findViewById(R.id.feed_btn);\n+        delete = (Button) findViewById(R.id.delete);\n+        imageview = (ImageView) findViewById(R.id.imageView);\n+        mDbHelper = new PhotoHelper(this);\n+\n+        //open the search page\n+        openSearch();\n+\n+        //set onClickListeners to the buttons\n+        search.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                //Get the search text in edit text\n+                String searchText = editText.getText().toString();\n+                makeRequestWithCallback(searchText, items);\n+                editText.setText(\"\");\n+            }\n+        });\n+\n+        pre.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                if (!items.isEmpty() && cur_page > 0) {\n+                    cur_page -= 1;\n+                    new ImageLoadTask(items.get(cur_page), imageview).execute();\n+                } else {\n+                    Toast.makeText(getApplicationContext(), \"Already the first page.\", Toast.LENGTH_SHORT).show();\n+                }\n+            }\n+        });\n+\n+        next.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                if (!items.isEmpty() && cur_page < items.size() - 1) {\n+                    cur_page += 1;\n+                    new ImageLoadTask(items.get(cur_page), imageview).execute();\n+                } else {\n+                    Toast.makeText(getApplicationContext(), \"Already the last page.\", Toast.LENGTH_SHORT).show();\n+                }\n+            }\n+        });\n+\n+        feed.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                if (!items.isEmpty()) {\n+                    PhotoHelper.WriteIntoDatabase(mDbHelper, items.get(cur_page));\n+                    Toast.makeText(getApplicationContext(), \"Added to feed\", Toast.LENGTH_SHORT).show();\n+                } else {\n+                    Toast.makeText(getApplicationContext(), \"Nothing to feed\", Toast.LENGTH_SHORT).show();\n+                }\n+            }\n+        });\n+\n+        delete.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                if (!items.isEmpty()) {\n+                    PhotoHelper.DeleteItemDatabase(mDbHelper, items.get(cur_page));\n+                    Toast.makeText(getApplicationContext(), \"Deleted from feed\", Toast.LENGTH_SHORT).show();\n+                    openMyFeed();\n+                } else {\n+                    Toast.makeText(getApplicationContext(), \"Nothing to delete\", Toast.LENGTH_SHORT).show();\n+                }\n+            }\n+        });\n+    }\n+\n+    @Override\n+    public boolean onCreateOptionsMenu(Menu menu) {\n+        // Inflate the menu; this adds items to the action bar if it is present.\n+        getMenuInflater().inflate(R.menu.menu_main, menu);\n+        return super.onCreateOptionsMenu(menu);\n+    }\n+\n+    @Override\n+    public boolean onOptionsItemSelected(MenuItem item) {\n+        // Handle action bar item clicks here. The action bar will\n+        // automatically handle clicks on the Home/Up button, so long\n+        // as you specify a parent activity in AndroidManifest.xml.\n+        // Handle presses on the action bar items\n+        switch (item.getItemId()) {\n+            case R.id.action_feed:\n+                openMyFeed();\n+                return true;\n+            case R.id.action_search:\n+                openSearch();\n+                return true;\n+            default:\n+                return super.onOptionsItemSelected(item);\n+        }\n+    }\n+\n+    /**\n+     * the openSearch() method clears the current displaying data and opens the search page\n+     */\n+    public void openSearch() {\n+        delete.setVisibility(View.GONE);\n+        feed.setVisibility(View.VISIBLE);\n+        editText.setVisibility(View.VISIBLE);\n+        search.setVisibility(View.VISIBLE);\n+        cur_page = 0;\n+        items.clear();\n+        imageview.setImageResource(0);\n+    }\n+\n+    /**\n+     * the openMyFeed() method clears the current displaying data and opens the feed page\n+     */\n+    public void openMyFeed() {\n+        delete.setVisibility(View.VISIBLE);\n+        feed.setVisibility(View.GONE);\n+        editText.setVisibility(View.GONE);\n+        search.setVisibility(View.GONE);\n+        cur_page = 0;\n+        items.clear();\n+        imageview.setImageResource(0);\n+\n+        PhotoHelper.SyncWithDatabase(mDbHelper, items);\n+        if (items.isEmpty()) {\n+            Toast.makeText(getApplicationContext(), \"You haven't feed anything yet\", Toast.LENGTH_SHORT).show();\n+        } else {\n+            new ImageLoadTask(items.get(cur_page), imageview).execute();\n+        }\n+    }\n+\n+    /**\n+     * the makeRequestWithCallback() takes a string and send a http request to google; assign the return links to an arraylist\n+     */\n+    public void makeRequestWithCallback(String searchText,final ArrayList<String> itemlist) {\n+        HttpHandler handler = new HttpHandler(MainActivity.this);\n+        handler.searchWithCallback(searchText, new SuccessCallback() {\n+            @Override\n+            public void callback(boolean success, JSONObject response) {\n+                if (success) {\n+                    Log.d(\"Success\", Boolean.toString(success));\n+                    try {\n+                        JSONArray items = response.getJSONArray(\"items\");\n+\n+                        itemlist.clear();\n+                        cur_page = 0;\n+\n+                        for (int i = 0; i < items.length(); i++) {\n+                            JSONObject itemObject = items.getJSONObject(i);\n+                            String link = itemObject.getString(\"link\");\n+                            itemlist.add(link);\n+                        }\n+\n+                        new ImageLoadTask(itemlist.get(0), imageview).execute();\n+\n+                    } catch (Exception err) {\n+                        Log.e(\"Error: \", err.getMessage());\n+                    }\n+\n+\n+                } else {\n+                    Log.d(\"Failure\", Boolean.toString(success));\n+                }\n+            }\n+        });", "url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42181707", "created_at": "2015-10-15T21:17:05Z", "body": "Moving this callback to a seperate method such as parseJson would improve clarity.", "updated_at": "2015-10-15T21:17:05Z", "html_url": "https://github.com/OlinMobileProto/Lab2/pull/14#discussion_r42181707", "pull_request_url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/14", "_links": {"self": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42181707"}, "html": {"href": "https://github.com/OlinMobileProto/Lab2/pull/14#discussion_r42181707"}, "pull_request": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/14"}}, "commit_id": "ce3b9c124e37134d88ebfae8b8dfe06954bf51e7", "user": {"following_url": "https://api.github.com/users/dcelik/following{/other_user}", "events_url": "https://api.github.com/users/dcelik/events{/privacy}", "organizations_url": "https://api.github.com/users/dcelik/orgs", "url": "https://api.github.com/users/dcelik", "gists_url": "https://api.github.com/users/dcelik/gists{/gist_id}", "html_url": "https://github.com/dcelik", "subscriptions_url": "https://api.github.com/users/dcelik/subscriptions", "avatar_url": "https://avatars.githubusercontent.com/u/5778626?v=3", "repos_url": "https://api.github.com/users/dcelik/repos", "received_events_url": "https://api.github.com/users/dcelik/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/dcelik/starred{/owner}{/repo}", "site_admin": false, "login": "dcelik", "type": "User", "id": 5778626, "followers_url": "https://api.github.com/users/dcelik/followers"}, "path": "PhotoFeed/app/src/main/java/com/example/yhuang/photofeed/MainActivity.java", "position": 208, "original_commit_id": "ce3b9c124e37134d88ebfae8b8dfe06954bf51e7", "id": 42181707}]