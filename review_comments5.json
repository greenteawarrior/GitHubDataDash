[{"original_position": 107, "diff_hunk": "@@ -0,0 +1,128 @@\n+package hieunguyen.com.photos;\n+\n+import android.app.AlertDialog;\n+import android.content.DialogInterface;\n+import android.os.Bundle;\n+import android.support.v4.app.Fragment;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.AdapterView;\n+import android.widget.Button;\n+import android.widget.GridView;\n+\n+import java.util.ArrayList;\n+\n+import static java.lang.Math.min;\n+\n+/**\n+ * Created by hieunguyen on 9/24/15.\n+ * Fragment that shows images the user has saved\n+ */\n+public class FeedFragment extends Fragment {\n+\n+    public DbService dbService;\n+    public ArrayList<ImageDAO> imageObjects;\n+    public ImageAdapter imageAdapter;\n+    public int pageNumber = 0;\n+    public Button backBtn, nextBtn;\n+\n+    @Override\n+    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n+        dbService = new DbService(getContext());\n+        imageObjects = dbService.getDataFromDB();\n+\n+        View view = inflater.inflate(R.layout.feed_fragment, container, false);\n+\n+        // Assign buttons so that button visibility setting in call to slice(list) line 48 will work\n+        nextBtn = (Button) view.findViewById(R.id.feed_button_next);\n+        nextBtn.setOnClickListener(new OnNextListener());\n+\n+        backBtn = (Button) view.findViewById(R.id.feed_button_back);\n+        backBtn.setOnClickListener(new OnBackListener());\n+\n+        // If there are images to display, initiate the grid view\n+        if (imageObjects.size() > 0) {\n+            imageAdapter = new ImageAdapter(getActivity(), slice(imageObjects));\n+\n+            GridView image_grid = (GridView) view.findViewById(R.id.feed_image_grid);\n+            image_grid.setAdapter(imageAdapter);\n+            image_grid.setOnItemClickListener(new AdapterView.OnItemClickListener() {\n+                @Override\n+                public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n+                    createDeleteDialog(position).show();\n+                }\n+            });\n+        }\n+\n+        return view;\n+    }\n+\n+    /**\n+     * Creates dialog to confirm the user's decision to delete the image from feed/database\n+     * @param position\n+     * @return\n+     */\n+    public AlertDialog createDeleteDialog(final int position) {\n+        AlertDialog.Builder deleteDialogBuilder = new AlertDialog.Builder(getActivity());\n+        deleteDialogBuilder.setPositiveButton(R.string.confirm_dialog, new DialogInterface.OnClickListener() {\n+            @Override\n+            public void onClick(DialogInterface dialog, int which) {\n+                dbService.delete(imageAdapter.getList().get(position));\n+                imageObjects = dbService.getDataFromDB();\n+                imageAdapter.setList(slice(imageObjects));\n+            }\n+        }).setNegativeButton(R.string.cancel, null).setMessage(R.string.delete_header);\n+        return deleteDialogBuilder.create();\n+    }\n+\n+    /**\n+     * Utility function to slice the imageObject list to create paging and to adjust the view\n+     * based on current page\n+     * @param oldList The list of which to take a sublist\n+     * @return The sliced list\n+     */\n+    public ArrayList<ImageDAO> slice(ArrayList<ImageDAO> oldList) {\n+        // Decides whether to show 9 images or the rest of the list\n+        int end = min((pageNumber + 1) * 9, oldList.size());\n+\n+        // Sets visibility of arrows depending on the page user is on\n+        if (nextBtn != null) {\n+            int visibility = (end == oldList.size() ? View.INVISIBLE : View.VISIBLE);\n+            nextBtn.setVisibility(visibility);\n+        }\n+\n+        if (backBtn != null) {\n+            int visibility = (pageNumber == 0 ? View.INVISIBLE : View.VISIBLE);\n+            backBtn.setVisibility(visibility);\n+        }\n+\n+        return new ArrayList<>(oldList.subList(pageNumber*9, end));\n+    }\n+\n+    /**\n+     * Listener for feed_next_button\n+     */\n+    private class OnNextListener implements View.OnClickListener {\n+        @Override", "url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42442414", "created_at": "2015-10-20T00:13:25Z", "body": "This is an odd way of doing it, and i think you could make it a lot easier by not creating separate classes. Try out butterknife- it will save you a ton of time!", "updated_at": "2015-10-20T00:13:25Z", "html_url": "https://github.com/OlinMobileProto/Lab2/pull/12#discussion_r42442414", "pull_request_url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/12", "_links": {"self": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42442414"}, "html": {"href": "https://github.com/OlinMobileProto/Lab2/pull/12#discussion_r42442414"}, "pull_request": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/12"}}, "commit_id": "c169aa58dcae93d4ebcd1df72eea31b45a6071b8", "user": {"following_url": "https://api.github.com/users/hhansson/following{/other_user}", "events_url": "https://api.github.com/users/hhansson/events{/privacy}", "organizations_url": "https://api.github.com/users/hhansson/orgs", "url": "https://api.github.com/users/hhansson", "gists_url": "https://api.github.com/users/hhansson/gists{/gist_id}", "html_url": "https://github.com/hhansson", "subscriptions_url": "https://api.github.com/users/hhansson/subscriptions", "avatar_url": "https://avatars.githubusercontent.com/u/5475041?v=3", "repos_url": "https://api.github.com/users/hhansson/repos", "received_events_url": "https://api.github.com/users/hhansson/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/hhansson/starred{/owner}{/repo}", "site_admin": false, "login": "hhansson", "type": "User", "id": 5475041, "followers_url": "https://api.github.com/users/hhansson/followers"}, "path": "Photos/app/src/main/java/hieunguyen/com/photos/FeedFragment.java", "position": 107, "original_commit_id": "c169aa58dcae93d4ebcd1df72eea31b45a6071b8", "id": 42442414}, {"original_position": 39, "diff_hunk": "@@ -0,0 +1,93 @@\n+package hieunguyen.com.photos;\n+\n+import android.content.Context;\n+import android.net.Uri;\n+\n+import com.android.volley.Request;\n+import com.android.volley.RequestQueue;\n+import com.android.volley.Response;\n+import com.android.volley.VolleyError;\n+import com.android.volley.toolbox.JsonObjectRequest;\n+import com.android.volley.toolbox.Volley;\n+\n+import org.json.JSONArray;\n+import org.json.JSONObject;\n+\n+import java.util.ArrayList;\n+\n+/**\n+ * Created by hieunguyen on 9/17/15.\n+ * HTTP request and response manager\n+ */\n+public class HttpHandler {\n+\n+    public RequestQueue queue;\n+    public Context context;\n+\n+    public HttpHandler(Context context) {\n+        this.context = context;\n+        queue = Volley.newRequestQueue(context);\n+    }\n+\n+    /**\n+     * Uses Google API search and passes the results to the callback function\n+     * @param searchQuery What the user wants to look for. Parameter 'q' of URL\n+     * @param startIndex Helps paging in Search Fragment and avoids repeated results\n+     * @param callback Callback function to pass the processed returned JSON to the caller\n+     */\n+    public void performSearch(String searchQuery, int startIndex, final SuccessCallback callback) {\n+        String query = searchQuery.replaceAll(\" \", \"+\");", "url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42442750", "created_at": "2015-10-20T00:18:55Z", "body": "this is a super long method, it should be refactored into a couple smaller methods. rule of thumb: you should be able to see the entire method on your screen (declaration to final } ).", "updated_at": "2015-10-20T00:18:55Z", "html_url": "https://github.com/OlinMobileProto/Lab2/pull/12#discussion_r42442750", "pull_request_url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/12", "_links": {"self": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42442750"}, "html": {"href": "https://github.com/OlinMobileProto/Lab2/pull/12#discussion_r42442750"}, "pull_request": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/12"}}, "commit_id": "c169aa58dcae93d4ebcd1df72eea31b45a6071b8", "user": {"following_url": "https://api.github.com/users/hhansson/following{/other_user}", "events_url": "https://api.github.com/users/hhansson/events{/privacy}", "organizations_url": "https://api.github.com/users/hhansson/orgs", "url": "https://api.github.com/users/hhansson", "gists_url": "https://api.github.com/users/hhansson/gists{/gist_id}", "html_url": "https://github.com/hhansson", "subscriptions_url": "https://api.github.com/users/hhansson/subscriptions", "avatar_url": "https://avatars.githubusercontent.com/u/5475041?v=3", "repos_url": "https://api.github.com/users/hhansson/repos", "received_events_url": "https://api.github.com/users/hhansson/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/hhansson/starred{/owner}{/repo}", "site_admin": false, "login": "hhansson", "type": "User", "id": 5475041, "followers_url": "https://api.github.com/users/hhansson/followers"}, "path": "Photos/app/src/main/java/hieunguyen/com/photos/HttpHandler.java", "position": 39, "original_commit_id": "c169aa58dcae93d4ebcd1df72eea31b45a6071b8", "id": 42442750}, {"original_position": 140, "diff_hunk": "@@ -0,0 +1,185 @@\n+package hieunguyen.com.photos;\n+\n+import android.app.AlertDialog;\n+import android.content.Context;\n+import android.content.DialogInterface;\n+import android.support.v4.app.Fragment;\n+import android.os.Bundle;\n+import android.util.Log;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.View.OnClickListener;\n+import android.view.ViewGroup;\n+import android.view.inputmethod.InputMethodManager;\n+import android.widget.AdapterView;\n+import android.widget.Button;\n+import android.widget.EditText;\n+import android.widget.GridView;\n+import android.widget.TextView;\n+\n+import java.util.ArrayList;\n+\n+/**\n+ * Created by hieunguyen on 9/24/15.\n+ * Fragment that shows the search functionality and returned images.\n+ */\n+public class SearchFragment extends Fragment {\n+\n+    public DbService dbService;\n+    public HttpHandler handler;\n+    public ArrayList<ImageDAO> imageObjects = new ArrayList<>();\n+    public ImageAdapter imageAdapter;\n+    public int pageNumber = 1;\n+    public View view;\n+    public EditText queryString;\n+    public TextView pageText;\n+    public Button nextBtn, backBtn, searchBtn;\n+\n+    @Override\n+    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n+        dbService = new DbService(getContext());\n+        view = inflater.inflate(R.layout.search_fragment, container, false);\n+\n+        queryString = (EditText) view.findViewById(R.id.search_query);\n+\n+        searchBtn = (Button) view.findViewById(R.id.search_button);\n+        searchBtn.setOnClickListener(new OnSearchListener());\n+\n+        nextBtn = (Button) view.findViewById(R.id.search_button_next);\n+        nextBtn.setOnClickListener(new OnNextListener());\n+        nextBtn.setVisibility(View.INVISIBLE);\n+\n+        backBtn = (Button) view.findViewById(R.id.search_button_back);\n+        backBtn.setOnClickListener(new OnBackListener());\n+        backBtn.setVisibility(View.INVISIBLE);\n+\n+        pageText = (TextView) view.findViewById(R.id.search_paging);\n+\n+        // Instatiate grid only when there are images to display\n+        if (!imageObjects.isEmpty()) {\n+            createGridView();\n+        }\n+\n+        return view;\n+    }\n+\n+    /**\n+     * Calls HttpHandler's performSearch after setting up parameters\n+     * @param query What the user wants to search for\n+     */\n+    public void performQuery(String query) {\n+        // This line allows for wrap-around paging. If we get to 12 and user clicks next then we\n+        // wrap around to page 1, and if we're on page 1 and user clicks back then we go to 11.\n+        pageNumber = (pageNumber == 12 ? 1 : (pageNumber == 0 ? 11 : pageNumber));\n+\n+        // Some math to work out how many images we're on\n+        int startIndex = 9*pageNumber - 8;\n+\n+        // Performs API request\n+        handler = new HttpHandler(getActivity().getBaseContext());\n+        handler.performSearch(query, startIndex, new SuccessCallback() {\n+            @Override\n+            public void callback(boolean success, ArrayList<ImageDAO> images) {\n+                if (success) {\n+                    imageObjects = images;\n+                    createGridView();\n+\n+                    // Sets the page number\n+                    Log.d(\"Setting text\", \"now\");\n+                    pageText.setText(String.valueOf(pageNumber));\n+\n+                    nextBtn.setVisibility(View.VISIBLE);\n+                    backBtn.setVisibility(View.VISIBLE);\n+                } else {\n+                    Log.e(\"Exception\", \"empty array\");\n+                    pageText.setText(\"Results not found\");\n+                }\n+            }\n+        });\n+\n+    }\n+\n+    /**\n+     * Initiates the grid view. If image is clicked asks if the user wants to add it to feed\n+     */\n+    public void createGridView() {\n+        imageAdapter = new ImageAdapter(getActivity(), imageObjects);\n+\n+        GridView gridview = (GridView) view.findViewById(R.id.search_image_grid);\n+        gridview.setAdapter(imageAdapter);\n+        gridview.setOnItemClickListener(new AdapterView.OnItemClickListener() {\n+            @Override\n+            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n+                createAddDialog(imageAdapter.getList().get(position))\n+                        .show();\n+            }\n+        });\n+    }\n+\n+    /**\n+     * Creates an add dialog to confirm the user's decision to add image to feed\n+     * @param image The image DAO to be added to the DB\n+     * @return Dialog to show\n+     */\n+    public AlertDialog createAddDialog(final ImageDAO image) {\n+        AlertDialog.Builder addDialogBuilder = new AlertDialog.Builder(getActivity());\n+        addDialogBuilder.setPositiveButton(R.string.confirm_dialog, new DialogInterface.OnClickListener() {\n+            @Override\n+            public void onClick(DialogInterface dialog, int which) {\n+                dbService.addToDB(image);\n+            }\n+        }).setNegativeButton(R.string.cancel, null).setMessage(R.string.add_header);\n+\n+        return addDialogBuilder.create();\n+    }\n+\n+    /**\n+     * Listener for search_button\n+     */\n+    private class OnSearchListener implements OnClickListener {\n+        @Override", "url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42443057", "created_at": "2015-10-20T00:23:36Z", "body": "same comment as above on these individual listener classes.", "updated_at": "2015-10-20T00:23:36Z", "html_url": "https://github.com/OlinMobileProto/Lab2/pull/12#discussion_r42443057", "pull_request_url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/12", "_links": {"self": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42443057"}, "html": {"href": "https://github.com/OlinMobileProto/Lab2/pull/12#discussion_r42443057"}, "pull_request": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/12"}}, "commit_id": "c169aa58dcae93d4ebcd1df72eea31b45a6071b8", "user": {"following_url": "https://api.github.com/users/hhansson/following{/other_user}", "events_url": "https://api.github.com/users/hhansson/events{/privacy}", "organizations_url": "https://api.github.com/users/hhansson/orgs", "url": "https://api.github.com/users/hhansson", "gists_url": "https://api.github.com/users/hhansson/gists{/gist_id}", "html_url": "https://github.com/hhansson", "subscriptions_url": "https://api.github.com/users/hhansson/subscriptions", "avatar_url": "https://avatars.githubusercontent.com/u/5475041?v=3", "repos_url": "https://api.github.com/users/hhansson/repos", "received_events_url": "https://api.github.com/users/hhansson/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/hhansson/starred{/owner}{/repo}", "site_admin": false, "login": "hhansson", "type": "User", "id": 5475041, "followers_url": "https://api.github.com/users/hhansson/followers"}, "path": "Photos/app/src/main/java/hieunguyen/com/photos/SearchFragment.java", "position": 140, "original_commit_id": "c169aa58dcae93d4ebcd1df72eea31b45a6071b8", "id": 42443057}, {"original_position": 15, "diff_hunk": "@@ -0,0 +1,59 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"match_parent\" android:layout_height=\"match_parent\">\n+\n+    <TextView\n+        android:id=\"@+id/feed_title\"\n+        android:layout_width=\"wrap_content\"\n+        android:layout_height=\"wrap_content\"\n+        android:text=\"@string/action_feed\"\n+        android:textColor=\"@android:color/black\"\n+        android:layout_centerHorizontal=\"true\"\n+        android:textSize=\"20pt\"/>\n+\n+    <GridView\n+        android:paddingTop=\"30dp\"", "url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42443155", "created_at": "2015-10-20T00:25:02Z", "body": "all dimensions like this need to go in dimens.xml", "updated_at": "2015-10-20T00:25:02Z", "html_url": "https://github.com/OlinMobileProto/Lab2/pull/12#discussion_r42443155", "pull_request_url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/12", "_links": {"self": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42443155"}, "html": {"href": "https://github.com/OlinMobileProto/Lab2/pull/12#discussion_r42443155"}, "pull_request": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/12"}}, "commit_id": "c169aa58dcae93d4ebcd1df72eea31b45a6071b8", "user": {"following_url": "https://api.github.com/users/hhansson/following{/other_user}", "events_url": "https://api.github.com/users/hhansson/events{/privacy}", "organizations_url": "https://api.github.com/users/hhansson/orgs", "url": "https://api.github.com/users/hhansson", "gists_url": "https://api.github.com/users/hhansson/gists{/gist_id}", "html_url": "https://github.com/hhansson", "subscriptions_url": "https://api.github.com/users/hhansson/subscriptions", "avatar_url": "https://avatars.githubusercontent.com/u/5475041?v=3", "repos_url": "https://api.github.com/users/hhansson/repos", "received_events_url": "https://api.github.com/users/hhansson/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/hhansson/starred{/owner}{/repo}", "site_admin": false, "login": "hhansson", "type": "User", "id": 5475041, "followers_url": "https://api.github.com/users/hhansson/followers"}, "path": "Photos/app/src/main/res/layout/feed_fragment.xml", "position": 15, "original_commit_id": "c169aa58dcae93d4ebcd1df72eea31b45a6071b8", "id": 42443155}, {"original_position": 55, "diff_hunk": "@@ -0,0 +1,59 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"match_parent\" android:layout_height=\"match_parent\">\n+\n+    <TextView\n+        android:id=\"@+id/feed_title\"\n+        android:layout_width=\"wrap_content\"\n+        android:layout_height=\"wrap_content\"\n+        android:text=\"@string/action_feed\"\n+        android:textColor=\"@android:color/black\"\n+        android:layout_centerHorizontal=\"true\"\n+        android:textSize=\"20pt\"/>\n+\n+    <GridView\n+        android:paddingTop=\"30dp\"\n+        android:id=\"@+id/feed_image_grid\"\n+        android:layout_below=\"@id/feed_title\"\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"match_parent\"\n+        android:numColumns=\"auto_fit\"\n+        android:columnWidth=\"90dp\"\n+        android:verticalSpacing=\"10dp\"\n+        android:horizontalSpacing=\"10dp\"\n+        android:stretchMode=\"columnWidth\"\n+        android:gravity=\"center\"\n+        android:focusable=\"false\"\n+        android:focusableInTouchMode=\"false\" />\n+\n+    <LinearLayout\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        android:layout_alignParentBottom=\"true\"\n+        android:weightSum=\"1\">\n+\n+        <Button\n+            android:layout_width=\"wrap_content\"\n+            android:layout_height=\"wrap_content\"\n+            android:id=\"@+id/feed_button_back\"\n+            android:text=\"@string/back_arrow\"\n+            android:textSize=\"20pt\"\n+            android:gravity=\"start|bottom\"\n+            android:background=\"@android:color/transparent\"\n+            android:layout_weight=\"0.5\"\n+            />\n+\n+        <Button\n+            android:layout_width=\"wrap_content\"\n+            android:layout_height=\"wrap_content\"\n+            android:layout_weight=\"0.5\"\n+            android:textSize=\"20pt\"\n+            android:id=\"@+id/feed_button_next\"\n+            android:text=\"@string/next_arrow\"\n+            android:gravity=\"end|bottom\"\n+            android:background=\"@android:color/transparent\"\n+            />", "url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42443209", "created_at": "2015-10-20T00:25:55Z", "body": "consider making a style for more than one component (like these 2 buttons) that have a lot of the same styling. it will save time and effort.", "updated_at": "2015-10-20T00:25:55Z", "html_url": "https://github.com/OlinMobileProto/Lab2/pull/12#discussion_r42443209", "pull_request_url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/12", "_links": {"self": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42443209"}, "html": {"href": "https://github.com/OlinMobileProto/Lab2/pull/12#discussion_r42443209"}, "pull_request": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/12"}}, "commit_id": "c169aa58dcae93d4ebcd1df72eea31b45a6071b8", "user": {"following_url": "https://api.github.com/users/hhansson/following{/other_user}", "events_url": "https://api.github.com/users/hhansson/events{/privacy}", "organizations_url": "https://api.github.com/users/hhansson/orgs", "url": "https://api.github.com/users/hhansson", "gists_url": "https://api.github.com/users/hhansson/gists{/gist_id}", "html_url": "https://github.com/hhansson", "subscriptions_url": "https://api.github.com/users/hhansson/subscriptions", "avatar_url": "https://avatars.githubusercontent.com/u/5475041?v=3", "repos_url": "https://api.github.com/users/hhansson/repos", "received_events_url": "https://api.github.com/users/hhansson/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/hhansson/starred{/owner}{/repo}", "site_admin": false, "login": "hhansson", "type": "User", "id": 5475041, "followers_url": "https://api.github.com/users/hhansson/followers"}, "path": "Photos/app/src/main/res/layout/feed_fragment.xml", "position": 55, "original_commit_id": "c169aa58dcae93d4ebcd1df72eea31b45a6071b8", "id": 42443209}]