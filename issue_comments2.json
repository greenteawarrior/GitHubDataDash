[{"body": "Thanks for making a new PR. The gist link does not open :(\r\n\r\nDoes this code change the means and variances during inference? I only see one set of updates returned and two graph computation graphs.", "url": "https://api.github.com/repos/mila-udem/blocks/issues/comments/144866692", "created_at": "2015-10-01T22:30:50Z", "html_url": "https://github.com/mila-udem/blocks/pull/851#issuecomment-144866692", "updated_at": "2015-10-01T22:30:50Z", "user": {"following_url": "https://api.github.com/users/rizar/following{/other_user}", "events_url": "https://api.github.com/users/rizar/events{/privacy}", "organizations_url": "https://api.github.com/users/rizar/orgs", "url": "https://api.github.com/users/rizar", "gists_url": "https://api.github.com/users/rizar/gists{/gist_id}", "html_url": "https://github.com/rizar", "subscriptions_url": "https://api.github.com/users/rizar/subscriptions", "avatar_url": "https://avatars.githubusercontent.com/u/654434?v=3", "repos_url": "https://api.github.com/users/rizar/repos", "received_events_url": "https://api.github.com/users/rizar/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/rizar/starred{/owner}{/repo}", "site_admin": false, "login": "rizar", "type": "User", "id": 654434, "followers_url": "https://api.github.com/users/rizar/followers"}, "id": 144866692, "issue_url": "https://api.github.com/repos/mila-udem/blocks/issues/851"}, {"body": "@cooijmanstim Thanks for picking this up.\r\n\r\n> we need to think about how to save/load the BN parameters. \r\n\r\nBy \"saved\" you mean serialized with a checkpoint? It seems like where to save that entire test-time graph is more the issue, isn't it? One would like to be able to get access to and evaluate it.\r\n\r\nOne thing I think we should leave up to the user is whether to adapt these via some additional squared error objective function passed as a term of the cost function to GradientDescent (which seems like a straightfoward and easy way to do it) or just via some simple moving average updates added with `add_updates`. In either case I don't think it's a problem to consider these quantities PARAMETERs as they don't appear in the train-time graph and therefore won't be adapted if you do gradient descent on the train-time graph's (single) output.\r\n\r\nThere's a larger arc to this story which is whether the graph substitution framework is really appropriate for this situation. Other frameworks are tackling this by adding a \"Brick\" equivalent into the original model object hierarchy, which makes it a little easier to figure out what's going on. In that kind of a setup, from a  Blocks perspective, we'd essentially have two apply methods, one for train time and one for test time. In that situation, however, we'd need some way of conveniently excluding the learned means and variances from gradient descent on the real objective function, which probably means a new parent role for PARAMETER, like ADAPTABLE or something.", "url": "https://api.github.com/repos/mila-udem/blocks/issues/comments/144874038", "created_at": "2015-10-01T23:14:06Z", "html_url": "https://github.com/mila-udem/blocks/pull/851#issuecomment-144874038", "updated_at": "2015-10-01T23:14:06Z", "user": {"following_url": "https://api.github.com/users/dwf/following{/other_user}", "events_url": "https://api.github.com/users/dwf/events{/privacy}", "organizations_url": "https://api.github.com/users/dwf/orgs", "url": "https://api.github.com/users/dwf", "gists_url": "https://api.github.com/users/dwf/gists{/gist_id}", "html_url": "https://github.com/dwf", "subscriptions_url": "https://api.github.com/users/dwf/subscriptions", "avatar_url": "https://avatars.githubusercontent.com/u/60206?v=3", "repos_url": "https://api.github.com/users/dwf/repos", "received_events_url": "https://api.github.com/users/dwf/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/dwf/starred{/owner}{/repo}", "site_admin": false, "login": "dwf", "type": "User", "id": 60206, "followers_url": "https://api.github.com/users/dwf/followers"}, "id": 144874038, "issue_url": "https://api.github.com/repos/mila-udem/blocks/issues/851"}, {"body": "@rizar I fixed the gist link.\r\n\r\nThe means and variances change through the updates. In the example the updates are added to GradientDescent, and so they are only changed during training. They could be updated during inference by e.g. passing the updates to the monitoring extension.\r\n\r\n@dwf Your suggestion of adding PARAMETER roles seems like a good solution to me, at least for now. The user would get an unhappy surprise though if they ever use one of the inference graph outputs in the training graph.\r\n\r\nI like the idea of allowing the user to control the strategy of estimating the statistics. I'll think about how that should work.\r\n\r\nPersonally I like the graph substitution approach much better because it is more generally applicable. Also as a user I would very much like to outsource the complex and confusing burden of constructing the two different graphs to a simple function call at the end of my model construction code.", "url": "https://api.github.com/repos/mila-udem/blocks/issues/comments/145064897", "created_at": "2015-10-02T15:33:28Z", "html_url": "https://github.com/mila-udem/blocks/pull/851#issuecomment-145064897", "updated_at": "2015-10-02T15:33:28Z", "user": {"following_url": "https://api.github.com/users/cooijmanstim/following{/other_user}", "events_url": "https://api.github.com/users/cooijmanstim/events{/privacy}", "organizations_url": "https://api.github.com/users/cooijmanstim/orgs", "url": "https://api.github.com/users/cooijmanstim", "gists_url": "https://api.github.com/users/cooijmanstim/gists{/gist_id}", "html_url": "https://github.com/cooijmanstim", "subscriptions_url": "https://api.github.com/users/cooijmanstim/subscriptions", "avatar_url": "https://avatars.githubusercontent.com/u/206920?v=3", "repos_url": "https://api.github.com/users/cooijmanstim/repos", "received_events_url": "https://api.github.com/users/cooijmanstim/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/cooijmanstim/starred{/owner}{/repo}", "site_admin": false, "login": "cooijmanstim", "type": "User", "id": 206920, "followers_url": "https://api.github.com/users/cooijmanstim/followers"}, "id": 145064897, "issue_url": "https://api.github.com/repos/mila-udem/blocks/issues/851"}, {"body": "Correct me if I am wrong, but if we go for the \"brick\" solution, one will never be able to add batch norm to existing bricks, including MLP? If it's true, I think it is a strong argument to use replacements.", "url": "https://api.github.com/repos/mila-udem/blocks/issues/comments/145143916", "created_at": "2015-10-02T20:15:34Z", "html_url": "https://github.com/mila-udem/blocks/pull/851#issuecomment-145143916", "updated_at": "2015-10-02T20:15:34Z", "user": {"following_url": "https://api.github.com/users/rizar/following{/other_user}", "events_url": "https://api.github.com/users/rizar/events{/privacy}", "organizations_url": "https://api.github.com/users/rizar/orgs", "url": "https://api.github.com/users/rizar", "gists_url": "https://api.github.com/users/rizar/gists{/gist_id}", "html_url": "https://github.com/rizar", "subscriptions_url": "https://api.github.com/users/rizar/subscriptions", "avatar_url": "https://avatars.githubusercontent.com/u/654434?v=3", "repos_url": "https://api.github.com/users/rizar/repos", "received_events_url": "https://api.github.com/users/rizar/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/rizar/starred{/owner}{/repo}", "site_admin": false, "login": "rizar", "type": "User", "id": 654434, "followers_url": "https://api.github.com/users/rizar/followers"}, "id": 145143916, "issue_url": "https://api.github.com/repos/mila-udem/blocks/issues/851"}, {"body": "I have been working on an improvement suggested by @rizar that would attach the updates to the graph using annotations. The code is basically done but I'm running into some problems. Using annotations requires giving up the distinction between `initialization_updates` and `accumulation_updates`, which can be done using ifelse with a shared variable denoting whether the initialization has occurred or not. Unfortunately it turns out that there are some issues with the gradient of ifelse that can cause its branches to be evaluated unconditionally. This is a problem for the `gamma` and `beta` parameters, which do need a conditional to avoid using them until we know their shapes.", "url": "https://api.github.com/repos/mila-udem/blocks/issues/comments/150834710", "created_at": "2015-10-24T17:11:32Z", "html_url": "https://github.com/mila-udem/blocks/pull/851#issuecomment-150834710", "updated_at": "2015-10-24T17:11:32Z", "user": {"following_url": "https://api.github.com/users/cooijmanstim/following{/other_user}", "events_url": "https://api.github.com/users/cooijmanstim/events{/privacy}", "organizations_url": "https://api.github.com/users/cooijmanstim/orgs", "url": "https://api.github.com/users/cooijmanstim", "gists_url": "https://api.github.com/users/cooijmanstim/gists{/gist_id}", "html_url": "https://github.com/cooijmanstim", "subscriptions_url": "https://api.github.com/users/cooijmanstim/subscriptions", "avatar_url": "https://avatars.githubusercontent.com/u/206920?v=3", "repos_url": "https://api.github.com/users/cooijmanstim/repos", "received_events_url": "https://api.github.com/users/cooijmanstim/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/cooijmanstim/starred{/owner}{/repo}", "site_admin": false, "login": "cooijmanstim", "type": "User", "id": 206920, "followers_url": "https://api.github.com/users/cooijmanstim/followers"}, "id": 150834710, "issue_url": "https://api.github.com/repos/mila-udem/blocks/issues/851"}, {"body": "Thanks for letting us know the status. I am not sure I understand though\nwhy the gradient of the updates is taken.\n\nOn 24 October 2015 at 13:11, Tim Cooijmans <notifications@github.com> wrote:\n\n> I have been working on an improvement suggested by @rizar\n> <https://github.com/rizar> that would attach the updates to the graph\n> using annotations. The code is basically done but I'm running into some\n> problems. Using annotations requires giving up the distinction between\n> initialization_updates and accumulation_updates, which can be done using\n> ifelse with a shared variable denoting whether the initialization has\n> occurred or not. Unfortunately it turns out that there are some issues with\n> the gradient of ifelse that can cause its branches to be evaluated\n> unconditionally. This is a problem for the gamma and beta parameters,\n> which do need a conditional to avoid using them until we know their shapes.\n>\n> \u2014\n> Reply to this email directly or view it on GitHub\n> <https://github.com/mila-udem/blocks/pull/851#issuecomment-150834710>.\n>\n", "url": "https://api.github.com/repos/mila-udem/blocks/issues/comments/151139758", "created_at": "2015-10-26T13:51:49Z", "html_url": "https://github.com/mila-udem/blocks/pull/851#issuecomment-151139758", "updated_at": "2015-10-26T13:51:49Z", "user": {"following_url": "https://api.github.com/users/rizar/following{/other_user}", "events_url": "https://api.github.com/users/rizar/events{/privacy}", "organizations_url": "https://api.github.com/users/rizar/orgs", "url": "https://api.github.com/users/rizar", "gists_url": "https://api.github.com/users/rizar/gists{/gist_id}", "html_url": "https://github.com/rizar", "subscriptions_url": "https://api.github.com/users/rizar/subscriptions", "avatar_url": "https://avatars.githubusercontent.com/u/654434?v=3", "repos_url": "https://api.github.com/users/rizar/repos", "received_events_url": "https://api.github.com/users/rizar/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/rizar/starred{/owner}{/repo}", "site_admin": false, "login": "rizar", "type": "User", "id": 654434, "followers_url": "https://api.github.com/users/rizar/followers"}, "id": 151139758, "issue_url": "https://api.github.com/repos/mila-udem/blocks/issues/851"}, {"body": "It isn't, rather the gammas and betas appear in the training graph as ifelse(initialized, gamma, T.ones_like(batch_mean)), and funny things happen when the gradient of that is taken.", "url": "https://api.github.com/repos/mila-udem/blocks/issues/comments/151211194", "created_at": "2015-10-26T17:06:46Z", "html_url": "https://github.com/mila-udem/blocks/pull/851#issuecomment-151211194", "updated_at": "2015-10-26T17:06:46Z", "user": {"following_url": "https://api.github.com/users/cooijmanstim/following{/other_user}", "events_url": "https://api.github.com/users/cooijmanstim/events{/privacy}", "organizations_url": "https://api.github.com/users/cooijmanstim/orgs", "url": "https://api.github.com/users/cooijmanstim", "gists_url": "https://api.github.com/users/cooijmanstim/gists{/gist_id}", "html_url": "https://github.com/cooijmanstim", "subscriptions_url": "https://api.github.com/users/cooijmanstim/subscriptions", "avatar_url": "https://avatars.githubusercontent.com/u/206920?v=3", "repos_url": "https://api.github.com/users/cooijmanstim/repos", "received_events_url": "https://api.github.com/users/cooijmanstim/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/cooijmanstim/starred{/owner}{/repo}", "site_admin": false, "login": "cooijmanstim", "type": "User", "id": 206920, "followers_url": "https://api.github.com/users/cooijmanstim/followers"}, "id": 151211194, "issue_url": "https://api.github.com/repos/mila-udem/blocks/issues/851"}, {"body": "To be clear, by the chain rule (f(g(x))' = f'(g(x))g'(x)) the gradient with respect to gamma of that expression is  `grad(ifelse)(initialized, gamma, T.ones_like(batch_mean)) * grad(gamma)`. The shape of `grad(gamma)` is incorrect initially, and the code breaks.", "url": "https://api.github.com/repos/mila-udem/blocks/issues/comments/151213424", "created_at": "2015-10-26T17:15:07Z", "html_url": "https://github.com/mila-udem/blocks/pull/851#issuecomment-151213424", "updated_at": "2015-10-26T17:15:07Z", "user": {"following_url": "https://api.github.com/users/cooijmanstim/following{/other_user}", "events_url": "https://api.github.com/users/cooijmanstim/events{/privacy}", "organizations_url": "https://api.github.com/users/cooijmanstim/orgs", "url": "https://api.github.com/users/cooijmanstim", "gists_url": "https://api.github.com/users/cooijmanstim/gists{/gist_id}", "html_url": "https://github.com/cooijmanstim", "subscriptions_url": "https://api.github.com/users/cooijmanstim/subscriptions", "avatar_url": "https://avatars.githubusercontent.com/u/206920?v=3", "repos_url": "https://api.github.com/users/cooijmanstim/repos", "received_events_url": "https://api.github.com/users/cooijmanstim/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/cooijmanstim/starred{/owner}{/repo}", "site_admin": false, "login": "cooijmanstim", "type": "User", "id": 206920, "followers_url": "https://api.github.com/users/cooijmanstim/followers"}, "id": 151213424, "issue_url": "https://api.github.com/repos/mila-udem/blocks/issues/851"}, {"body": "An ifelse in the training graph is less than ideal... can it be avoided?\n\nOn Mon, Oct 26, 2015 at 1:15 PM, Tim Cooijmans <notifications@github.com>\nwrote:\n\n> To be clear, by the chain rule (f(g(x))' = f'(g(x))g'(x)) the gradient\n> with respect to gamma of that expression is grad(ifelse)(initialized,\n> gamma, T.ones_like(batch_mean)) * grad(gamma). The shape of grad(gamma)\n> is incorrect initially, and the code breaks.\n>\n> \u2014\n> Reply to this email directly or view it on GitHub\n> <https://github.com/mila-udem/blocks/pull/851#issuecomment-151213424>.\n>\n", "url": "https://api.github.com/repos/mila-udem/blocks/issues/comments/151215642", "created_at": "2015-10-26T17:23:19Z", "html_url": "https://github.com/mila-udem/blocks/pull/851#issuecomment-151215642", "updated_at": "2015-10-26T17:23:19Z", "user": {"following_url": "https://api.github.com/users/dwf/following{/other_user}", "events_url": "https://api.github.com/users/dwf/events{/privacy}", "organizations_url": "https://api.github.com/users/dwf/orgs", "url": "https://api.github.com/users/dwf", "gists_url": "https://api.github.com/users/dwf/gists{/gist_id}", "html_url": "https://github.com/dwf", "subscriptions_url": "https://api.github.com/users/dwf/subscriptions", "avatar_url": "https://avatars.githubusercontent.com/u/60206?v=3", "repos_url": "https://api.github.com/users/dwf/repos", "received_events_url": "https://api.github.com/users/dwf/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/dwf/starred{/owner}{/repo}", "site_admin": false, "login": "dwf", "type": "User", "id": 60206, "followers_url": "https://api.github.com/users/dwf/followers"}, "id": 151215642, "issue_url": "https://api.github.com/repos/mila-udem/blocks/issues/851"}, {"body": "Yes, by returning initialization updates and having the user make sure they are performed before anything else, as done in the version this pull request is at.", "url": "https://api.github.com/repos/mila-udem/blocks/issues/comments/151259749", "created_at": "2015-10-26T19:34:13Z", "html_url": "https://github.com/mila-udem/blocks/pull/851#issuecomment-151259749", "updated_at": "2015-10-26T19:34:13Z", "user": {"following_url": "https://api.github.com/users/cooijmanstim/following{/other_user}", "events_url": "https://api.github.com/users/cooijmanstim/events{/privacy}", "organizations_url": "https://api.github.com/users/cooijmanstim/orgs", "url": "https://api.github.com/users/cooijmanstim", "gists_url": "https://api.github.com/users/cooijmanstim/gists{/gist_id}", "html_url": "https://github.com/cooijmanstim", "subscriptions_url": "https://api.github.com/users/cooijmanstim/subscriptions", "avatar_url": "https://avatars.githubusercontent.com/u/206920?v=3", "repos_url": "https://api.github.com/users/cooijmanstim/repos", "received_events_url": "https://api.github.com/users/cooijmanstim/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/cooijmanstim/starred{/owner}{/repo}", "site_admin": false, "login": "cooijmanstim", "type": "User", "id": 206920, "followers_url": "https://api.github.com/users/cooijmanstim/followers"}, "id": 151259749, "issue_url": "https://api.github.com/repos/mila-udem/blocks/issues/851"}, {"body": "But to make sure that these updates are done before anything else you have\nto go to great lengths like writing a special extension to do that. I do\nnot have a better idea for now :(\n\nOn 26 October 2015 at 15:34, Tim Cooijmans <notifications@github.com> wrote:\n\n> Yes, by returning initialization updates and having the user make sure\n> they are performed before anything else, as done in the version this pull\n> request is at.\n>\n> \u2014\n> Reply to this email directly or view it on GitHub\n> <https://github.com/mila-udem/blocks/pull/851#issuecomment-151259749>.\n>\n", "url": "https://api.github.com/repos/mila-udem/blocks/issues/comments/151267580", "created_at": "2015-10-26T20:06:08Z", "html_url": "https://github.com/mila-udem/blocks/pull/851#issuecomment-151267580", "updated_at": "2015-10-26T20:06:08Z", "user": {"following_url": "https://api.github.com/users/rizar/following{/other_user}", "events_url": "https://api.github.com/users/rizar/events{/privacy}", "organizations_url": "https://api.github.com/users/rizar/orgs", "url": "https://api.github.com/users/rizar", "gists_url": "https://api.github.com/users/rizar/gists{/gist_id}", "html_url": "https://github.com/rizar", "subscriptions_url": "https://api.github.com/users/rizar/subscriptions", "avatar_url": "https://avatars.githubusercontent.com/u/654434?v=3", "repos_url": "https://api.github.com/users/rizar/repos", "received_events_url": "https://api.github.com/users/rizar/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/rizar/starred{/owner}{/repo}", "site_admin": false, "login": "rizar", "type": "User", "id": 654434, "followers_url": "https://api.github.com/users/rizar/followers"}, "id": 151267580, "issue_url": "https://api.github.com/repos/mila-udem/blocks/issues/851"}, {"body": "There's another problem when the user has to deal with updates, which is that any further replacements the user performs in the graph (e.g. dropout or additional batch normalization) are not performed on the updates. If you applied batch normalization and then dropout, the batch normalization updates would be in terms of the non-dropped-out variables. This is okay in this case for the initialization updates because we only need the shape, but in general it's incorrect and slow.\r\n\r\nMaybe we should go with the brick approach after all. If we make one brick that carries out the batch normalization and another that is basically a FeedforwardSequence with batch normalization followed by some user-specified activation function. This could be used as the activation function in e.g. MLP. This is how I've been doing batch normalization prior to picking up this PR.", "url": "https://api.github.com/repos/mila-udem/blocks/issues/comments/151516648", "created_at": "2015-10-27T14:29:36Z", "html_url": "https://github.com/mila-udem/blocks/pull/851#issuecomment-151516648", "updated_at": "2015-10-27T14:29:36Z", "user": {"following_url": "https://api.github.com/users/cooijmanstim/following{/other_user}", "events_url": "https://api.github.com/users/cooijmanstim/events{/privacy}", "organizations_url": "https://api.github.com/users/cooijmanstim/orgs", "url": "https://api.github.com/users/cooijmanstim", "gists_url": "https://api.github.com/users/cooijmanstim/gists{/gist_id}", "html_url": "https://github.com/cooijmanstim", "subscriptions_url": "https://api.github.com/users/cooijmanstim/subscriptions", "avatar_url": "https://avatars.githubusercontent.com/u/206920?v=3", "repos_url": "https://api.github.com/users/cooijmanstim/repos", "received_events_url": "https://api.github.com/users/cooijmanstim/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/cooijmanstim/starred{/owner}{/repo}", "site_admin": false, "login": "cooijmanstim", "type": "User", "id": 206920, "followers_url": "https://api.github.com/users/cooijmanstim/followers"}, "id": 151516648, "issue_url": "https://api.github.com/repos/mila-udem/blocks/issues/851"}, {"body": "Without expressing a preference for either of the choices, I would like to\npoint out that the fact that replacements do not act on auxiliary variables\nand updates is a known major design issue:\nhttps://github.com/mila-udem/blocks/issues/514.\n\nOn 27 October 2015 at 10:29, Tim Cooijmans <notifications@github.com> wrote:\n\n> There's another problem when the user has to deal with updates, which is\n> that any further replacements the user performs in the graph (e.g. dropout\n> or additional batch normalization) are not performed on the updates. If you\n> applied batch normalization and then dropout, the batch normalization\n> updates would be in terms of the non-dropped-out variables. This is okay in\n> this case for the initialization updates because we only need the shape,\n> but in general it's incorrect and slow.\n>\n> Maybe we should go with the brick approach after all. If we make one brick\n> that carries out the batch normalization and another that is basically a\n> FeedforwardSequence with batch normalization followed by some\n> user-specified activation function. This could be used as the activation\n> function in e.g. MLP. This is how I've been doing batch normalization prior\n> to picking up this PR.\n>\n> \u2014\n> Reply to this email directly or view it on GitHub\n> <https://github.com/mila-udem/blocks/pull/851#issuecomment-151516648>.\n>\n", "url": "https://api.github.com/repos/mila-udem/blocks/issues/comments/151529758", "created_at": "2015-10-27T14:56:48Z", "html_url": "https://github.com/mila-udem/blocks/pull/851#issuecomment-151529758", "updated_at": "2015-10-27T14:56:48Z", "user": {"following_url": "https://api.github.com/users/rizar/following{/other_user}", "events_url": "https://api.github.com/users/rizar/events{/privacy}", "organizations_url": "https://api.github.com/users/rizar/orgs", "url": "https://api.github.com/users/rizar", "gists_url": "https://api.github.com/users/rizar/gists{/gist_id}", "html_url": "https://github.com/rizar", "subscriptions_url": "https://api.github.com/users/rizar/subscriptions", "avatar_url": "https://avatars.githubusercontent.com/u/654434?v=3", "repos_url": "https://api.github.com/users/rizar/repos", "received_events_url": "https://api.github.com/users/rizar/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/rizar/starred{/owner}{/repo}", "site_admin": false, "login": "rizar", "type": "User", "id": 654434, "followers_url": "https://api.github.com/users/rizar/followers"}, "id": 151529758, "issue_url": "https://api.github.com/repos/mila-udem/blocks/issues/851"}]