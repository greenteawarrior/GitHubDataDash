[{"original_position": 44, "diff_hunk": "@@ -0,0 +1,87 @@\n+package com.example.siyer.photostream;\n+\n+import android.content.ContentValues;\n+import android.content.Context;\n+import android.database.Cursor;\n+import android.database.sqlite.SQLiteDatabase;\n+import android.database.sqlite.SQLiteOpenHelper;\n+import android.util.Log;\n+\n+/**\n+ * Created by siyer on 9/30/2015.\n+ * Database methods to create/add/delete from the SQL dtatbase\n+ */\n+import com.example.siyer.photostream.CollectionSchema.CollTable;\n+\n+import java.util.ArrayList;\n+\n+public class CollDbHelper extends SQLiteOpenHelper {\n+\n+    public static final int DATABASE_VERSION = 5;\n+    public static final String DATABASE_NAME = \"FeedReader.db\";\n+\n+    public CollDbHelper(Context context) {\n+        super(context, DATABASE_NAME, null, DATABASE_VERSION);\n+    }\n+\n+    @Override\n+    public void onCreate(SQLiteDatabase db) {\n+        db.execSQL(CollTable.SQL_CREATE_ENTRIES);\n+    }\n+\n+    @Override\n+    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {\n+        db.execSQL(CollTable.SQL_DELETE_ENTRIES);\n+        onCreate(db);\n+    }\n+\n+    @Override\n+    public void onDowngrade(SQLiteDatabase db, int oldVersion, int newVersion) {\n+        onUpgrade(db, oldVersion, newVersion);\n+    }\n+\n+    public void writeDatabase(String input){\n+        SQLiteDatabase writeDBase = getWritableDatabase();", "url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42186968", "created_at": "2015-10-15T22:05:30Z", "body": "You can move this call to your oncreate for performance increase. Define two sql databases as private params and then instantiate them in your oncreate.", "updated_at": "2015-10-15T22:05:30Z", "html_url": "https://github.com/OlinMobileProto/Lab2/pull/11#discussion_r42186968", "pull_request_url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/11", "_links": {"self": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42186968"}, "html": {"href": "https://github.com/OlinMobileProto/Lab2/pull/11#discussion_r42186968"}, "pull_request": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/11"}}, "commit_id": "50d04ef222627d641da2bff4b887b5b4aa7fe0a3", "user": {"following_url": "https://api.github.com/users/dcelik/following{/other_user}", "events_url": "https://api.github.com/users/dcelik/events{/privacy}", "organizations_url": "https://api.github.com/users/dcelik/orgs", "url": "https://api.github.com/users/dcelik", "gists_url": "https://api.github.com/users/dcelik/gists{/gist_id}", "html_url": "https://github.com/dcelik", "subscriptions_url": "https://api.github.com/users/dcelik/subscriptions", "avatar_url": "https://avatars.githubusercontent.com/u/5778626?v=3", "repos_url": "https://api.github.com/users/dcelik/repos", "received_events_url": "https://api.github.com/users/dcelik/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/dcelik/starred{/owner}{/repo}", "site_admin": false, "login": "dcelik", "type": "User", "id": 5778626, "followers_url": "https://api.github.com/users/dcelik/followers"}, "path": "PhotoStream/app/src/main/java/com/example/siyer/photostream/CollDbHelper.java", "position": 44, "original_commit_id": "50d04ef222627d641da2bff4b887b5b4aa7fe0a3", "id": 42186968}, {"original_position": 55, "diff_hunk": "@@ -0,0 +1,87 @@\n+package com.example.siyer.photostream;\n+\n+import android.content.ContentValues;\n+import android.content.Context;\n+import android.database.Cursor;\n+import android.database.sqlite.SQLiteDatabase;\n+import android.database.sqlite.SQLiteOpenHelper;\n+import android.util.Log;\n+\n+/**\n+ * Created by siyer on 9/30/2015.\n+ * Database methods to create/add/delete from the SQL dtatbase\n+ */\n+import com.example.siyer.photostream.CollectionSchema.CollTable;\n+\n+import java.util.ArrayList;\n+\n+public class CollDbHelper extends SQLiteOpenHelper {\n+\n+    public static final int DATABASE_VERSION = 5;\n+    public static final String DATABASE_NAME = \"FeedReader.db\";\n+\n+    public CollDbHelper(Context context) {\n+        super(context, DATABASE_NAME, null, DATABASE_VERSION);\n+    }\n+\n+    @Override\n+    public void onCreate(SQLiteDatabase db) {\n+        db.execSQL(CollTable.SQL_CREATE_ENTRIES);\n+    }\n+\n+    @Override\n+    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {\n+        db.execSQL(CollTable.SQL_DELETE_ENTRIES);\n+        onCreate(db);\n+    }\n+\n+    @Override\n+    public void onDowngrade(SQLiteDatabase db, int oldVersion, int newVersion) {\n+        onUpgrade(db, oldVersion, newVersion);\n+    }\n+\n+    public void writeDatabase(String input){\n+        SQLiteDatabase writeDBase = getWritableDatabase();\n+\n+        ContentValues values = new ContentValues();\n+        values.put(CollTable.URL_COLUMN, input);\n+\n+        writeDBase.insert(CollTable.TABLE_NAME, null, values);\n+        writeDBase.close();\n+    }\n+\n+    public ArrayList<String> readDatabase(){\n+        //Read the database and return all the entries in the form of a list\n+        SQLiteDatabase readDBase = getReadableDatabase();", "url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42186990", "created_at": "2015-10-15T22:05:41Z", "body": "Same as with your writeable database", "updated_at": "2015-10-15T22:05:41Z", "html_url": "https://github.com/OlinMobileProto/Lab2/pull/11#discussion_r42186990", "pull_request_url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/11", "_links": {"self": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42186990"}, "html": {"href": "https://github.com/OlinMobileProto/Lab2/pull/11#discussion_r42186990"}, "pull_request": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/11"}}, "commit_id": "50d04ef222627d641da2bff4b887b5b4aa7fe0a3", "user": {"following_url": "https://api.github.com/users/dcelik/following{/other_user}", "events_url": "https://api.github.com/users/dcelik/events{/privacy}", "organizations_url": "https://api.github.com/users/dcelik/orgs", "url": "https://api.github.com/users/dcelik", "gists_url": "https://api.github.com/users/dcelik/gists{/gist_id}", "html_url": "https://github.com/dcelik", "subscriptions_url": "https://api.github.com/users/dcelik/subscriptions", "avatar_url": "https://avatars.githubusercontent.com/u/5778626?v=3", "repos_url": "https://api.github.com/users/dcelik/repos", "received_events_url": "https://api.github.com/users/dcelik/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/dcelik/starred{/owner}{/repo}", "site_admin": false, "login": "dcelik", "type": "User", "id": 5778626, "followers_url": "https://api.github.com/users/dcelik/followers"}, "path": "PhotoStream/app/src/main/java/com/example/siyer/photostream/CollDbHelper.java", "position": 55, "original_commit_id": "50d04ef222627d641da2bff4b887b5b4aa7fe0a3", "id": 42186990}, {"original_position": 77, "diff_hunk": "@@ -0,0 +1,87 @@\n+package com.example.siyer.photostream;\n+\n+import android.content.ContentValues;\n+import android.content.Context;\n+import android.database.Cursor;\n+import android.database.sqlite.SQLiteDatabase;\n+import android.database.sqlite.SQLiteOpenHelper;\n+import android.util.Log;\n+\n+/**\n+ * Created by siyer on 9/30/2015.\n+ * Database methods to create/add/delete from the SQL dtatbase\n+ */\n+import com.example.siyer.photostream.CollectionSchema.CollTable;\n+\n+import java.util.ArrayList;\n+\n+public class CollDbHelper extends SQLiteOpenHelper {\n+\n+    public static final int DATABASE_VERSION = 5;\n+    public static final String DATABASE_NAME = \"FeedReader.db\";\n+\n+    public CollDbHelper(Context context) {\n+        super(context, DATABASE_NAME, null, DATABASE_VERSION);\n+    }\n+\n+    @Override\n+    public void onCreate(SQLiteDatabase db) {\n+        db.execSQL(CollTable.SQL_CREATE_ENTRIES);\n+    }\n+\n+    @Override\n+    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {\n+        db.execSQL(CollTable.SQL_DELETE_ENTRIES);\n+        onCreate(db);\n+    }\n+\n+    @Override\n+    public void onDowngrade(SQLiteDatabase db, int oldVersion, int newVersion) {\n+        onUpgrade(db, oldVersion, newVersion);\n+    }\n+\n+    public void writeDatabase(String input){\n+        SQLiteDatabase writeDBase = getWritableDatabase();\n+\n+        ContentValues values = new ContentValues();\n+        values.put(CollTable.URL_COLUMN, input);\n+\n+        writeDBase.insert(CollTable.TABLE_NAME, null, values);\n+        writeDBase.close();\n+    }\n+\n+    public ArrayList<String> readDatabase(){\n+        //Read the database and return all the entries in the form of a list\n+        SQLiteDatabase readDBase = getReadableDatabase();\n+        ArrayList<String> collectionUrl = new ArrayList<>();\n+        String[] projection = {\n+                CollTable.URL_ID,\n+                CollTable.URL_COLUMN};\n+\n+        Cursor cursor = readDBase.query(CollTable.TABLE_NAME, projection,\n+                null,null,null,null,null\n+        );\n+\n+        cursor.moveToFirst(); //move the read cursor to the start\n+\n+        if (cursor.moveToFirst()) {\n+            do {\n+                collectionUrl.add(cursor.getString(1));\n+            } while (cursor.moveToNext());\n+        }\n+        return collectionUrl;\n+    }\n+\n+    public void deleteDatabase(String url){\n+        //Delete the entry that has been removed from the collection\n+        SQLiteDatabase deleteDBase = getWritableDatabase();", "url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42187089", "created_at": "2015-10-15T22:06:43Z", "body": "Same as above.", "updated_at": "2015-10-15T22:06:43Z", "html_url": "https://github.com/OlinMobileProto/Lab2/pull/11#discussion_r42187089", "pull_request_url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/11", "_links": {"self": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42187089"}, "html": {"href": "https://github.com/OlinMobileProto/Lab2/pull/11#discussion_r42187089"}, "pull_request": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/11"}}, "commit_id": "50d04ef222627d641da2bff4b887b5b4aa7fe0a3", "user": {"following_url": "https://api.github.com/users/dcelik/following{/other_user}", "events_url": "https://api.github.com/users/dcelik/events{/privacy}", "organizations_url": "https://api.github.com/users/dcelik/orgs", "url": "https://api.github.com/users/dcelik", "gists_url": "https://api.github.com/users/dcelik/gists{/gist_id}", "html_url": "https://github.com/dcelik", "subscriptions_url": "https://api.github.com/users/dcelik/subscriptions", "avatar_url": "https://avatars.githubusercontent.com/u/5778626?v=3", "repos_url": "https://api.github.com/users/dcelik/repos", "received_events_url": "https://api.github.com/users/dcelik/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/dcelik/starred{/owner}{/repo}", "site_admin": false, "login": "dcelik", "type": "User", "id": 5778626, "followers_url": "https://api.github.com/users/dcelik/followers"}, "path": "PhotoStream/app/src/main/java/com/example/siyer/photostream/CollDbHelper.java", "position": 77, "original_commit_id": "50d04ef222627d641da2bff4b887b5b4aa7fe0a3", "id": 42187089}, {"original_position": 82, "diff_hunk": "@@ -0,0 +1,87 @@\n+package com.example.siyer.photostream;\n+\n+import android.content.ContentValues;\n+import android.content.Context;\n+import android.database.Cursor;\n+import android.database.sqlite.SQLiteDatabase;\n+import android.database.sqlite.SQLiteOpenHelper;\n+import android.util.Log;\n+\n+/**\n+ * Created by siyer on 9/30/2015.\n+ * Database methods to create/add/delete from the SQL dtatbase\n+ */\n+import com.example.siyer.photostream.CollectionSchema.CollTable;\n+\n+import java.util.ArrayList;\n+\n+public class CollDbHelper extends SQLiteOpenHelper {\n+\n+    public static final int DATABASE_VERSION = 5;\n+    public static final String DATABASE_NAME = \"FeedReader.db\";\n+\n+    public CollDbHelper(Context context) {\n+        super(context, DATABASE_NAME, null, DATABASE_VERSION);\n+    }\n+\n+    @Override\n+    public void onCreate(SQLiteDatabase db) {\n+        db.execSQL(CollTable.SQL_CREATE_ENTRIES);\n+    }\n+\n+    @Override\n+    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {\n+        db.execSQL(CollTable.SQL_DELETE_ENTRIES);\n+        onCreate(db);\n+    }\n+\n+    @Override\n+    public void onDowngrade(SQLiteDatabase db, int oldVersion, int newVersion) {\n+        onUpgrade(db, oldVersion, newVersion);\n+    }\n+\n+    public void writeDatabase(String input){\n+        SQLiteDatabase writeDBase = getWritableDatabase();\n+\n+        ContentValues values = new ContentValues();\n+        values.put(CollTable.URL_COLUMN, input);\n+\n+        writeDBase.insert(CollTable.TABLE_NAME, null, values);\n+        writeDBase.close();\n+    }\n+\n+    public ArrayList<String> readDatabase(){\n+        //Read the database and return all the entries in the form of a list\n+        SQLiteDatabase readDBase = getReadableDatabase();\n+        ArrayList<String> collectionUrl = new ArrayList<>();\n+        String[] projection = {\n+                CollTable.URL_ID,\n+                CollTable.URL_COLUMN};\n+\n+        Cursor cursor = readDBase.query(CollTable.TABLE_NAME, projection,\n+                null,null,null,null,null\n+        );\n+\n+        cursor.moveToFirst(); //move the read cursor to the start\n+\n+        if (cursor.moveToFirst()) {\n+            do {\n+                collectionUrl.add(cursor.getString(1));\n+            } while (cursor.moveToNext());\n+        }\n+        return collectionUrl;\n+    }\n+\n+    public void deleteDatabase(String url){\n+        //Delete the entry that has been removed from the collection\n+        SQLiteDatabase deleteDBase = getWritableDatabase();\n+\n+        String selection = CollTable.URL_COLUMN + \" LIKE ? \";\n+        String[] selectionArgs = {String.valueOf(url)};\n+\n+        deleteDBase.delete(CollTable.TABLE_NAME,selection,selectionArgs);", "url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42187156", "created_at": "2015-10-15T22:07:23Z", "body": "What happens if there are two identical images in the feed? It would remove both? @shrutiyer ", "updated_at": "2015-10-15T22:07:23Z", "html_url": "https://github.com/OlinMobileProto/Lab2/pull/11#discussion_r42187156", "pull_request_url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/11", "_links": {"self": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42187156"}, "html": {"href": "https://github.com/OlinMobileProto/Lab2/pull/11#discussion_r42187156"}, "pull_request": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/11"}}, "commit_id": "50d04ef222627d641da2bff4b887b5b4aa7fe0a3", "user": {"following_url": "https://api.github.com/users/dcelik/following{/other_user}", "events_url": "https://api.github.com/users/dcelik/events{/privacy}", "organizations_url": "https://api.github.com/users/dcelik/orgs", "url": "https://api.github.com/users/dcelik", "gists_url": "https://api.github.com/users/dcelik/gists{/gist_id}", "html_url": "https://github.com/dcelik", "subscriptions_url": "https://api.github.com/users/dcelik/subscriptions", "avatar_url": "https://avatars.githubusercontent.com/u/5778626?v=3", "repos_url": "https://api.github.com/users/dcelik/repos", "received_events_url": "https://api.github.com/users/dcelik/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/dcelik/starred{/owner}{/repo}", "site_admin": false, "login": "dcelik", "type": "User", "id": 5778626, "followers_url": "https://api.github.com/users/dcelik/followers"}, "path": "PhotoStream/app/src/main/java/com/example/siyer/photostream/CollDbHelper.java", "position": 82, "original_commit_id": "50d04ef222627d641da2bff4b887b5b4aa7fe0a3", "id": 42187156}, {"original_position": 26, "diff_hunk": "@@ -0,0 +1,140 @@\n+package com.example.siyer.photostream;\n+\n+import android.app.Activity;\n+import android.os.Bundle;\n+import android.support.v4.app.Fragment;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+\n+import android.webkit.WebSettings;\n+import android.webkit.WebView;\n+import android.webkit.WebViewClient;\n+\n+import android.widget.Toast;\n+import java.util.ArrayList;\n+\n+/**\n+ * Created by siyer on 9/28/2015.\n+ * This Collection Fragment displays all the saved images in the\n+ * database and allows to browse/remove them.\n+ */\n+\n+public class CollectionFragment extends Fragment {\n+    public WebView webFeedView;\n+    public int feedIndex = 0; //Current Image index for WebView\n+    public ArrayList<String> collectionUrl; //Array with all the URLs in my collection", "url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42187181", "created_at": "2015-10-15T22:07:38Z", "body": "Do these need to be public?", "updated_at": "2015-10-15T22:07:38Z", "html_url": "https://github.com/OlinMobileProto/Lab2/pull/11#discussion_r42187181", "pull_request_url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/11", "_links": {"self": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42187181"}, "html": {"href": "https://github.com/OlinMobileProto/Lab2/pull/11#discussion_r42187181"}, "pull_request": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/11"}}, "commit_id": "50d04ef222627d641da2bff4b887b5b4aa7fe0a3", "user": {"following_url": "https://api.github.com/users/dcelik/following{/other_user}", "events_url": "https://api.github.com/users/dcelik/events{/privacy}", "organizations_url": "https://api.github.com/users/dcelik/orgs", "url": "https://api.github.com/users/dcelik", "gists_url": "https://api.github.com/users/dcelik/gists{/gist_id}", "html_url": "https://github.com/dcelik", "subscriptions_url": "https://api.github.com/users/dcelik/subscriptions", "avatar_url": "https://avatars.githubusercontent.com/u/5778626?v=3", "repos_url": "https://api.github.com/users/dcelik/repos", "received_events_url": "https://api.github.com/users/dcelik/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/dcelik/starred{/owner}{/repo}", "site_admin": false, "login": "dcelik", "type": "User", "id": 5778626, "followers_url": "https://api.github.com/users/dcelik/followers"}, "path": "PhotoStream/app/src/main/java/com/example/siyer/photostream/CollectionFragment.java", "position": 26, "original_commit_id": "50d04ef222627d641da2bff4b887b5b4aa7fe0a3", "id": 42187181}, {"original_position": 39, "diff_hunk": "@@ -0,0 +1,140 @@\n+package com.example.siyer.photostream;\n+\n+import android.app.Activity;\n+import android.os.Bundle;\n+import android.support.v4.app.Fragment;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+\n+import android.webkit.WebSettings;\n+import android.webkit.WebView;\n+import android.webkit.WebViewClient;\n+\n+import android.widget.Toast;\n+import java.util.ArrayList;\n+\n+/**\n+ * Created by siyer on 9/28/2015.\n+ * This Collection Fragment displays all the saved images in the\n+ * database and allows to browse/remove them.\n+ */\n+\n+public class CollectionFragment extends Fragment {\n+    public WebView webFeedView;\n+    public int feedIndex = 0; //Current Image index for WebView\n+    public ArrayList<String> collectionUrl; //Array with all the URLs in my collection\n+    CollDbHelper mDbHelper; //Database Helper\n+\n+    @Override\n+    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n+                             Bundle savedInstanceState) {\n+        final View rootview = inflater.inflate(R.layout.collection_fragment, container, false);\n+\n+        mDbHelper = new CollDbHelper(getActivity()); //Initializing database and reading it\n+        collectionUrl = mDbHelper.readDatabase();\n+\n+        webFeedView = (WebView) rootview.findViewById(R.id.webView_fd);\n+        webFeedView.loadUrl(getString((R.string.default_img))); //Init WebView and load default\n+        Toast.makeText(getActivity().getBaseContext(), getString(R.string.next_prev),Toast.LENGTH_SHORT).show();", "url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42187203", "created_at": "2015-10-15T22:07:51Z", "body": "Good use of toasts and string.xml", "updated_at": "2015-10-15T22:07:51Z", "html_url": "https://github.com/OlinMobileProto/Lab2/pull/11#discussion_r42187203", "pull_request_url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/11", "_links": {"self": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42187203"}, "html": {"href": "https://github.com/OlinMobileProto/Lab2/pull/11#discussion_r42187203"}, "pull_request": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/11"}}, "commit_id": "50d04ef222627d641da2bff4b887b5b4aa7fe0a3", "user": {"following_url": "https://api.github.com/users/dcelik/following{/other_user}", "events_url": "https://api.github.com/users/dcelik/events{/privacy}", "organizations_url": "https://api.github.com/users/dcelik/orgs", "url": "https://api.github.com/users/dcelik", "gists_url": "https://api.github.com/users/dcelik/gists{/gist_id}", "html_url": "https://github.com/dcelik", "subscriptions_url": "https://api.github.com/users/dcelik/subscriptions", "avatar_url": "https://avatars.githubusercontent.com/u/5778626?v=3", "repos_url": "https://api.github.com/users/dcelik/repos", "received_events_url": "https://api.github.com/users/dcelik/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/dcelik/starred{/owner}{/repo}", "site_admin": false, "login": "dcelik", "type": "User", "id": 5778626, "followers_url": "https://api.github.com/users/dcelik/followers"}, "path": "PhotoStream/app/src/main/java/com/example/siyer/photostream/CollectionFragment.java", "position": 39, "original_commit_id": "50d04ef222627d641da2bff4b887b5b4aa7fe0a3", "id": 42187203}, {"original_position": 61, "diff_hunk": "@@ -0,0 +1,140 @@\n+package com.example.siyer.photostream;\n+\n+import android.app.Activity;\n+import android.os.Bundle;\n+import android.support.v4.app.Fragment;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+\n+import android.webkit.WebSettings;\n+import android.webkit.WebView;\n+import android.webkit.WebViewClient;\n+\n+import android.widget.Toast;\n+import java.util.ArrayList;\n+\n+/**\n+ * Created by siyer on 9/28/2015.\n+ * This Collection Fragment displays all the saved images in the\n+ * database and allows to browse/remove them.\n+ */\n+\n+public class CollectionFragment extends Fragment {\n+    public WebView webFeedView;\n+    public int feedIndex = 0; //Current Image index for WebView\n+    public ArrayList<String> collectionUrl; //Array with all the URLs in my collection\n+    CollDbHelper mDbHelper; //Database Helper\n+\n+    @Override\n+    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n+                             Bundle savedInstanceState) {\n+        final View rootview = inflater.inflate(R.layout.collection_fragment, container, false);\n+\n+        mDbHelper = new CollDbHelper(getActivity()); //Initializing database and reading it\n+        collectionUrl = mDbHelper.readDatabase();\n+\n+        webFeedView = (WebView) rootview.findViewById(R.id.webView_fd);\n+        webFeedView.loadUrl(getString((R.string.default_img))); //Init WebView and load default\n+        Toast.makeText(getActivity().getBaseContext(), getString(R.string.next_prev),Toast.LENGTH_SHORT).show();\n+        getImageFromColl(collectionUrl);\n+\n+        //OnCLick Listener for NEXT button\n+        final View next_but = rootview.findViewById(R.id.next_button_fd);\n+        next_but.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                // Various normal and edge cases\n+                if (collectionUrl.size()>=1) {\n+                    if (feedIndex < collectionUrl.size() - 1) {\n+                        feedIndex += 1;\n+                        getImageFromColl(collectionUrl);\n+                    } else {\n+                        feedIndex = 0;\n+                        getImageFromColl(collectionUrl);\n+                    }\n+                }else if (collectionUrl.size()==0){\n+                    Toast.makeText(getActivity().getBaseContext(), getString(R.string.no_img_toast),Toast.LENGTH_LONG).show();\n+                    webFeedView.loadUrl(getString(R.string.default_img));\n+                }\n+            }\n+        });", "url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42187247", "created_at": "2015-10-15T22:08:17Z", "body": "Moving large onclicklisteners such as this to a separate method will increase clarity and re usability.", "updated_at": "2015-10-15T22:08:17Z", "html_url": "https://github.com/OlinMobileProto/Lab2/pull/11#discussion_r42187247", "pull_request_url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/11", "_links": {"self": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42187247"}, "html": {"href": "https://github.com/OlinMobileProto/Lab2/pull/11#discussion_r42187247"}, "pull_request": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/11"}}, "commit_id": "50d04ef222627d641da2bff4b887b5b4aa7fe0a3", "user": {"following_url": "https://api.github.com/users/dcelik/following{/other_user}", "events_url": "https://api.github.com/users/dcelik/events{/privacy}", "organizations_url": "https://api.github.com/users/dcelik/orgs", "url": "https://api.github.com/users/dcelik", "gists_url": "https://api.github.com/users/dcelik/gists{/gist_id}", "html_url": "https://github.com/dcelik", "subscriptions_url": "https://api.github.com/users/dcelik/subscriptions", "avatar_url": "https://avatars.githubusercontent.com/u/5778626?v=3", "repos_url": "https://api.github.com/users/dcelik/repos", "received_events_url": "https://api.github.com/users/dcelik/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/dcelik/starred{/owner}{/repo}", "site_admin": false, "login": "dcelik", "type": "User", "id": 5778626, "followers_url": "https://api.github.com/users/dcelik/followers"}, "path": "PhotoStream/app/src/main/java/com/example/siyer/photostream/CollectionFragment.java", "position": 61, "original_commit_id": "50d04ef222627d641da2bff4b887b5b4aa7fe0a3", "id": 42187247}, {"original_position": 82, "diff_hunk": "@@ -0,0 +1,140 @@\n+package com.example.siyer.photostream;\n+\n+import android.app.Activity;\n+import android.os.Bundle;\n+import android.support.v4.app.Fragment;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+\n+import android.webkit.WebSettings;\n+import android.webkit.WebView;\n+import android.webkit.WebViewClient;\n+\n+import android.widget.Toast;\n+import java.util.ArrayList;\n+\n+/**\n+ * Created by siyer on 9/28/2015.\n+ * This Collection Fragment displays all the saved images in the\n+ * database and allows to browse/remove them.\n+ */\n+\n+public class CollectionFragment extends Fragment {\n+    public WebView webFeedView;\n+    public int feedIndex = 0; //Current Image index for WebView\n+    public ArrayList<String> collectionUrl; //Array with all the URLs in my collection\n+    CollDbHelper mDbHelper; //Database Helper\n+\n+    @Override\n+    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n+                             Bundle savedInstanceState) {\n+        final View rootview = inflater.inflate(R.layout.collection_fragment, container, false);\n+\n+        mDbHelper = new CollDbHelper(getActivity()); //Initializing database and reading it\n+        collectionUrl = mDbHelper.readDatabase();\n+\n+        webFeedView = (WebView) rootview.findViewById(R.id.webView_fd);\n+        webFeedView.loadUrl(getString((R.string.default_img))); //Init WebView and load default\n+        Toast.makeText(getActivity().getBaseContext(), getString(R.string.next_prev),Toast.LENGTH_SHORT).show();\n+        getImageFromColl(collectionUrl);\n+\n+        //OnCLick Listener for NEXT button\n+        final View next_but = rootview.findViewById(R.id.next_button_fd);\n+        next_but.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                // Various normal and edge cases\n+                if (collectionUrl.size()>=1) {\n+                    if (feedIndex < collectionUrl.size() - 1) {\n+                        feedIndex += 1;\n+                        getImageFromColl(collectionUrl);\n+                    } else {\n+                        feedIndex = 0;\n+                        getImageFromColl(collectionUrl);\n+                    }\n+                }else if (collectionUrl.size()==0){\n+                    Toast.makeText(getActivity().getBaseContext(), getString(R.string.no_img_toast),Toast.LENGTH_LONG).show();\n+                    webFeedView.loadUrl(getString(R.string.default_img));\n+                }\n+            }\n+        });\n+\n+        //OnCLick Listener for REMOVE button\n+        final View rem_but = rootview.findViewById(R.id.remove_button_fd);\n+        rem_but.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            //various cases; show no image available if collectionUrl is empty\n+            public void onClick(View v) {\n+                if (collectionUrl.size()>=2) {\n+                    mDbHelper.deleteDatabase(collectionUrl.get(feedIndex));\n+                    collectionUrl.remove(feedIndex);\n+                    if (feedIndex>=1) {\n+                        feedIndex -= 1;\n+                    }else{\n+                        feedIndex = 0;\n+                    }\n+                    getImageFromColl(collectionUrl);}\n+                else if(collectionUrl.size()==1){\n+                    collectionUrl.remove(feedIndex);\n+                    webFeedView.loadUrl(getString(R.string.default_img));\n+                }else {\n+                    Toast.makeText(getActivity().getBaseContext(), getString(R.string.add_img),Toast.LENGTH_SHORT).show();", "url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42187255", "created_at": "2015-10-15T22:08:25Z", "body": "Same as above.", "updated_at": "2015-10-15T22:08:25Z", "html_url": "https://github.com/OlinMobileProto/Lab2/pull/11#discussion_r42187255", "pull_request_url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/11", "_links": {"self": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42187255"}, "html": {"href": "https://github.com/OlinMobileProto/Lab2/pull/11#discussion_r42187255"}, "pull_request": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/11"}}, "commit_id": "50d04ef222627d641da2bff4b887b5b4aa7fe0a3", "user": {"following_url": "https://api.github.com/users/dcelik/following{/other_user}", "events_url": "https://api.github.com/users/dcelik/events{/privacy}", "organizations_url": "https://api.github.com/users/dcelik/orgs", "url": "https://api.github.com/users/dcelik", "gists_url": "https://api.github.com/users/dcelik/gists{/gist_id}", "html_url": "https://github.com/dcelik", "subscriptions_url": "https://api.github.com/users/dcelik/subscriptions", "avatar_url": "https://avatars.githubusercontent.com/u/5778626?v=3", "repos_url": "https://api.github.com/users/dcelik/repos", "received_events_url": "https://api.github.com/users/dcelik/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/dcelik/starred{/owner}{/repo}", "site_admin": false, "login": "dcelik", "type": "User", "id": 5778626, "followers_url": "https://api.github.com/users/dcelik/followers"}, "path": "PhotoStream/app/src/main/java/com/example/siyer/photostream/CollectionFragment.java", "position": 82, "original_commit_id": "50d04ef222627d641da2bff4b887b5b4aa7fe0a3", "id": 42187255}, {"original_position": 137, "diff_hunk": "@@ -0,0 +1,140 @@\n+package com.example.siyer.photostream;\n+\n+import android.app.Activity;\n+import android.os.Bundle;\n+import android.support.v4.app.Fragment;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+\n+import android.webkit.WebSettings;\n+import android.webkit.WebView;\n+import android.webkit.WebViewClient;\n+\n+import android.widget.Toast;\n+import java.util.ArrayList;\n+\n+/**\n+ * Created by siyer on 9/28/2015.\n+ * This Collection Fragment displays all the saved images in the\n+ * database and allows to browse/remove them.\n+ */\n+\n+public class CollectionFragment extends Fragment {\n+    public WebView webFeedView;\n+    public int feedIndex = 0; //Current Image index for WebView\n+    public ArrayList<String> collectionUrl; //Array with all the URLs in my collection\n+    CollDbHelper mDbHelper; //Database Helper\n+\n+    @Override\n+    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n+                             Bundle savedInstanceState) {\n+        final View rootview = inflater.inflate(R.layout.collection_fragment, container, false);\n+\n+        mDbHelper = new CollDbHelper(getActivity()); //Initializing database and reading it\n+        collectionUrl = mDbHelper.readDatabase();\n+\n+        webFeedView = (WebView) rootview.findViewById(R.id.webView_fd);\n+        webFeedView.loadUrl(getString((R.string.default_img))); //Init WebView and load default\n+        Toast.makeText(getActivity().getBaseContext(), getString(R.string.next_prev),Toast.LENGTH_SHORT).show();\n+        getImageFromColl(collectionUrl);\n+\n+        //OnCLick Listener for NEXT button\n+        final View next_but = rootview.findViewById(R.id.next_button_fd);\n+        next_but.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                // Various normal and edge cases\n+                if (collectionUrl.size()>=1) {\n+                    if (feedIndex < collectionUrl.size() - 1) {\n+                        feedIndex += 1;\n+                        getImageFromColl(collectionUrl);\n+                    } else {\n+                        feedIndex = 0;\n+                        getImageFromColl(collectionUrl);\n+                    }\n+                }else if (collectionUrl.size()==0){\n+                    Toast.makeText(getActivity().getBaseContext(), getString(R.string.no_img_toast),Toast.LENGTH_LONG).show();\n+                    webFeedView.loadUrl(getString(R.string.default_img));\n+                }\n+            }\n+        });\n+\n+        //OnCLick Listener for REMOVE button\n+        final View rem_but = rootview.findViewById(R.id.remove_button_fd);\n+        rem_but.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            //various cases; show no image available if collectionUrl is empty\n+            public void onClick(View v) {\n+                if (collectionUrl.size()>=2) {\n+                    mDbHelper.deleteDatabase(collectionUrl.get(feedIndex));\n+                    collectionUrl.remove(feedIndex);\n+                    if (feedIndex>=1) {\n+                        feedIndex -= 1;\n+                    }else{\n+                        feedIndex = 0;\n+                    }\n+                    getImageFromColl(collectionUrl);}\n+                else if(collectionUrl.size()==1){\n+                    collectionUrl.remove(feedIndex);\n+                    webFeedView.loadUrl(getString(R.string.default_img));\n+                }else {\n+                    Toast.makeText(getActivity().getBaseContext(), getString(R.string.add_img),Toast.LENGTH_SHORT).show();\n+                }\n+            }\n+        });\n+\n+        //OnCLick Listener for PREVIOUS button\n+        final View prev_but = rootview.findViewById(R.id.prev_button_fd);\n+        prev_but.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                if (collectionUrl.size()>=1) {\n+                    if (feedIndex >= 1) {\n+                        feedIndex -= 1;\n+                        getImageFromColl(collectionUrl);\n+                    } else {\n+                        feedIndex = collectionUrl.size() - 1;\n+                        getImageFromColl(collectionUrl);\n+                    }\n+                }else {\n+                    //Toast to improve UX and inform the users\n+                    Toast.makeText(getActivity().getBaseContext(), getString(R.string.no_img_toast),Toast.LENGTH_LONG).show();\n+                    webFeedView.loadUrl(getString(R.string.default_img));\n+                }\n+            }\n+        });\n+\n+        //OnCLick Listener for changing into SEARCH FRAGMENT\n+        final View search_but_fd = rootview.findViewById(R.id.search_button_fd);\n+        search_but_fd.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                ((MainActivity) getActivity()).changeToSearch();\n+            }\n+        });\n+        return rootview;\n+    }\n+    //Method to update WebView\n+    public void getImageFromColl(ArrayList<String> collectionUrl) {\n+        String urlToShow = collectionUrl.get(feedIndex);\n+\n+        //WebView Settings\n+        webFeedView.setWebViewClient(new WebViewClient());\n+        WebSettings settings = webFeedView.getSettings();\n+        settings.setUseWideViewPort(true);\n+        settings.setLoadWithOverviewMode(true);\n+\n+        //If collectionUrl is empty, show no image\n+        if (urlToShow != null && !urlToShow.isEmpty()) {\n+            try {\n+                webFeedView.loadUrl(urlToShow);\n+            } catch (Exception ex) {\n+                ex.printStackTrace();\n+            }\n+        }else{\n+            Toast.makeText(getActivity().getBaseContext(), getString(R.string.no_img_toast),Toast.LENGTH_LONG).show();\n+            webFeedView.loadUrl(getString(R.string.default_img));", "url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42187292", "created_at": "2015-10-15T22:08:49Z", "body": "Good use of default image.", "updated_at": "2015-10-15T22:08:49Z", "html_url": "https://github.com/OlinMobileProto/Lab2/pull/11#discussion_r42187292", "pull_request_url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/11", "_links": {"self": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42187292"}, "html": {"href": "https://github.com/OlinMobileProto/Lab2/pull/11#discussion_r42187292"}, "pull_request": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/11"}}, "commit_id": "50d04ef222627d641da2bff4b887b5b4aa7fe0a3", "user": {"following_url": "https://api.github.com/users/dcelik/following{/other_user}", "events_url": "https://api.github.com/users/dcelik/events{/privacy}", "organizations_url": "https://api.github.com/users/dcelik/orgs", "url": "https://api.github.com/users/dcelik", "gists_url": "https://api.github.com/users/dcelik/gists{/gist_id}", "html_url": "https://github.com/dcelik", "subscriptions_url": "https://api.github.com/users/dcelik/subscriptions", "avatar_url": "https://avatars.githubusercontent.com/u/5778626?v=3", "repos_url": "https://api.github.com/users/dcelik/repos", "received_events_url": "https://api.github.com/users/dcelik/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/dcelik/starred{/owner}{/repo}", "site_admin": false, "login": "dcelik", "type": "User", "id": 5778626, "followers_url": "https://api.github.com/users/dcelik/followers"}, "path": "PhotoStream/app/src/main/java/com/example/siyer/photostream/CollectionFragment.java", "position": 137, "original_commit_id": "50d04ef222627d641da2bff4b887b5b4aa7fe0a3", "id": 42187292}, {"original_position": 25, "diff_hunk": "@@ -0,0 +1,72 @@\n+package com.example.siyer.photostream;\n+\n+import android.app.Fragment;\n+import android.content.Context;\n+import android.util.Log;\n+\n+import com.android.volley.Request;\n+import com.android.volley.RequestQueue;\n+import com.android.volley.Response;\n+import com.android.volley.VolleyError;\n+import com.android.volley.toolbox.JsonObjectRequest;\n+import com.android.volley.toolbox.Volley;\n+\n+import org.json.JSONArray;\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+//Handles all the http requests\n+public class HttpHandler {\n+    RequestQueue searchqueue;\n+    final String API_KEY = \"AIzaSyB3HVwkKcTxnx0RTOKnSpgKVICbO_tgFCc\";\n+    final String CSE_ID = \"003595003396096289737:n_6yb0ixa4k\";", "url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42187332", "created_at": "2015-10-15T22:09:17Z", "body": "You should make these private so they are not accessible outside of the class.", "updated_at": "2015-10-15T22:09:17Z", "html_url": "https://github.com/OlinMobileProto/Lab2/pull/11#discussion_r42187332", "pull_request_url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/11", "_links": {"self": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42187332"}, "html": {"href": "https://github.com/OlinMobileProto/Lab2/pull/11#discussion_r42187332"}, "pull_request": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/11"}}, "commit_id": "50d04ef222627d641da2bff4b887b5b4aa7fe0a3", "user": {"following_url": "https://api.github.com/users/dcelik/following{/other_user}", "events_url": "https://api.github.com/users/dcelik/events{/privacy}", "organizations_url": "https://api.github.com/users/dcelik/orgs", "url": "https://api.github.com/users/dcelik", "gists_url": "https://api.github.com/users/dcelik/gists{/gist_id}", "html_url": "https://github.com/dcelik", "subscriptions_url": "https://api.github.com/users/dcelik/subscriptions", "avatar_url": "https://avatars.githubusercontent.com/u/5778626?v=3", "repos_url": "https://api.github.com/users/dcelik/repos", "received_events_url": "https://api.github.com/users/dcelik/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/dcelik/starred{/owner}{/repo}", "site_admin": false, "login": "dcelik", "type": "User", "id": 5778626, "followers_url": "https://api.github.com/users/dcelik/followers"}, "path": "PhotoStream/app/src/main/java/com/example/siyer/photostream/HttpHandler.java", "position": 25, "original_commit_id": "50d04ef222627d641da2bff4b887b5b4aa7fe0a3", "id": 42187332}, {"original_position": 65, "diff_hunk": "@@ -0,0 +1,66 @@\n+package com.example.siyer.photostream;\n+\n+import android.support.v4.app.FragmentManager;\n+import android.support.v4.app.FragmentTransaction;\n+\n+import android.support.v7.app.AppCompatActivity;\n+import android.os.Bundle;\n+import android.view.Menu;\n+import android.view.MenuItem;\n+\n+import java.util.ArrayList;\n+\n+public class MainActivity extends AppCompatActivity {\n+\n+    public ArrayList<String> collectionUrl = new ArrayList<String>();\n+\n+    @Override\n+    protected void onCreate(Bundle savedInstanceState) {\n+        super.onCreate(savedInstanceState);\n+        //Fragment transaction for switching between fragments\n+        setContentView(R.layout.activity_main);\n+        FragmentManager fragmentManager = getSupportFragmentManager();\n+        FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();\n+\n+        SearchFragment fragment = new SearchFragment();\n+        fragmentTransaction.add(R.id.fragment, fragment);\n+        fragmentTransaction.commit();\n+    }\n+\n+\n+    @Override\n+    public boolean onCreateOptionsMenu(Menu menu) {\n+        // Inflate the menu; this adds items to the action bar if it is present.\n+        getMenuInflater().inflate(R.menu.menu_main, menu);\n+        return true;\n+    }\n+\n+    @Override\n+    public boolean onOptionsItemSelected(MenuItem item) {\n+        // Handle action bar item clicks here. The action bar will\n+        // automatically handle clicks on the Home/Up button, so long\n+        // as you specify a parent activity in AndroidManifest.xml.\n+        int id = item.getItemId();\n+\n+        //noinspection SimplifiableIfStatement\n+        if (id == R.id.action_settings) {\n+            return true;\n+        }\n+\n+        return super.onOptionsItemSelected(item);\n+    }\n+    //Changes to the SEARCH fragment from the COLLECTION\n+    public void changeToSearch() {\n+        FragmentTransaction fTrac = getSupportFragmentManager().beginTransaction();\n+        SearchFragment fragment = new SearchFragment();\n+        fTrac.replace(R.id.fragment, fragment);\n+        fTrac.commit();\n+    }\n+    //Changes to the COLLECTION fragment from the SEARCH fragment\n+    public void changeToColl()  {\n+        FragmentTransaction fTrac = getSupportFragmentManager().beginTransaction();\n+        CollectionFragment fragment = new CollectionFragment();\n+        fTrac.replace(R.id.fragment, fragment);\n+        fTrac.commit();\n+    }", "url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42187400", "created_at": "2015-10-15T22:09:54Z", "body": "Making this fragment transaction one method that takes in the id number of the fragment would be cleaner.", "updated_at": "2015-10-15T22:09:54Z", "html_url": "https://github.com/OlinMobileProto/Lab2/pull/11#discussion_r42187400", "pull_request_url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/11", "_links": {"self": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42187400"}, "html": {"href": "https://github.com/OlinMobileProto/Lab2/pull/11#discussion_r42187400"}, "pull_request": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/11"}}, "commit_id": "50d04ef222627d641da2bff4b887b5b4aa7fe0a3", "user": {"following_url": "https://api.github.com/users/dcelik/following{/other_user}", "events_url": "https://api.github.com/users/dcelik/events{/privacy}", "organizations_url": "https://api.github.com/users/dcelik/orgs", "url": "https://api.github.com/users/dcelik", "gists_url": "https://api.github.com/users/dcelik/gists{/gist_id}", "html_url": "https://github.com/dcelik", "subscriptions_url": "https://api.github.com/users/dcelik/subscriptions", "avatar_url": "https://avatars.githubusercontent.com/u/5778626?v=3", "repos_url": "https://api.github.com/users/dcelik/repos", "received_events_url": "https://api.github.com/users/dcelik/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/dcelik/starred{/owner}{/repo}", "site_admin": false, "login": "dcelik", "type": "User", "id": 5778626, "followers_url": "https://api.github.com/users/dcelik/followers"}, "path": "PhotoStream/app/src/main/java/com/example/siyer/photostream/MainActivity.java", "position": 65, "original_commit_id": "50d04ef222627d641da2bff4b887b5b4aa7fe0a3", "id": 42187400}, {"original_position": 73, "diff_hunk": "@@ -0,0 +1,137 @@\n+package com.example.siyer.photostream;\n+\n+import android.support.v4.app.Fragment;\n+import android.os.Bundle;\n+\n+import android.util.Log;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.webkit.WebSettings;\n+import android.webkit.WebView;\n+import android.webkit.WebViewClient;\n+\n+import android.widget.EditText;\n+import android.widget.Toast;\n+\n+import java.util.ArrayList;\n+\n+/**\n+ * Search Fragment that lets you search on Google for images,\n+ * browse through them, and add the ones that you liked\n+ * to a collection database. These images can bee viewed from\n+ * the Collection fragment\n+ */\n+public class SearchFragment extends Fragment {\n+    public int urlIndex = 0;\n+    public ArrayList<String> urlList; //List of search results\n+    public WebView webImgView;\n+    public ArrayList<String> collectionURL; //List of added images\n+    CollDbHelper mDbHelper;\n+\n+    @Override\n+    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n+                             Bundle savedInstanceState) {\n+        final View rootview = inflater.inflate(R.layout.fragment_main, container, false);\n+\n+        MainActivity activity = (MainActivity)getActivity();\n+        collectionURL = activity.collectionUrl; //get the list from the main activity\n+\n+        ////OnCLick Listener for SEARCH button\n+        final View search_but = rootview.findViewById(R.id.search_button);//Listener for search button\n+        search_but.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                EditText search_word = (EditText) getActivity().findViewById(R.id.search_text);//Text to be searched\n+                final String search_word_string = search_word.getText().toString();\n+\n+                //Handling the search and returning the results\n+                HttpHandler searchHandler = new HttpHandler(SearchFragment.this.getActivity(), SearchFragment.this);\n+                searchHandler.searchGoogle(search_word_string, new Callback() {\n+                    @Override\n+                    public void resultsCallback(ArrayList<String> urlArray) {\n+                        urlList = urlArray;\n+                        getImageFromURL();\n+                    }\n+                });\n+            }\n+        });\n+        //OnCLick Listener for PREV button\n+        final View next_but = rootview.findViewById(R.id.next_button);\n+        next_but.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                if (urlList.size()>0) {\n+                    if (urlIndex < urlList.size() - 1) {\n+                        urlIndex += 1;\n+                    } else {\n+                        urlIndex = 0;\n+                    }\n+                    getImageFromURL();\n+                }\n+            }\n+        });", "url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42187457", "created_at": "2015-10-15T22:10:27Z", "body": "You can isolate these as their own method instead of copy pasting.", "updated_at": "2015-10-15T22:10:27Z", "html_url": "https://github.com/OlinMobileProto/Lab2/pull/11#discussion_r42187457", "pull_request_url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/11", "_links": {"self": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42187457"}, "html": {"href": "https://github.com/OlinMobileProto/Lab2/pull/11#discussion_r42187457"}, "pull_request": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/11"}}, "commit_id": "50d04ef222627d641da2bff4b887b5b4aa7fe0a3", "user": {"following_url": "https://api.github.com/users/dcelik/following{/other_user}", "events_url": "https://api.github.com/users/dcelik/events{/privacy}", "organizations_url": "https://api.github.com/users/dcelik/orgs", "url": "https://api.github.com/users/dcelik", "gists_url": "https://api.github.com/users/dcelik/gists{/gist_id}", "html_url": "https://github.com/dcelik", "subscriptions_url": "https://api.github.com/users/dcelik/subscriptions", "avatar_url": "https://avatars.githubusercontent.com/u/5778626?v=3", "repos_url": "https://api.github.com/users/dcelik/repos", "received_events_url": "https://api.github.com/users/dcelik/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/dcelik/starred{/owner}{/repo}", "site_admin": false, "login": "dcelik", "type": "User", "id": 5778626, "followers_url": "https://api.github.com/users/dcelik/followers"}, "path": "PhotoStream/app/src/main/java/com/example/siyer/photostream/SearchFragment.java", "position": 73, "original_commit_id": "50d04ef222627d641da2bff4b887b5b4aa7fe0a3", "id": 42187457}, {"original_position": 132, "diff_hunk": "@@ -0,0 +1,137 @@\n+package com.example.siyer.photostream;\n+\n+import android.support.v4.app.Fragment;\n+import android.os.Bundle;\n+\n+import android.util.Log;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.webkit.WebSettings;\n+import android.webkit.WebView;\n+import android.webkit.WebViewClient;\n+\n+import android.widget.EditText;\n+import android.widget.Toast;\n+\n+import java.util.ArrayList;\n+\n+/**\n+ * Search Fragment that lets you search on Google for images,\n+ * browse through them, and add the ones that you liked\n+ * to a collection database. These images can bee viewed from\n+ * the Collection fragment\n+ */\n+public class SearchFragment extends Fragment {\n+    public int urlIndex = 0;\n+    public ArrayList<String> urlList; //List of search results\n+    public WebView webImgView;\n+    public ArrayList<String> collectionURL; //List of added images\n+    CollDbHelper mDbHelper;\n+\n+    @Override\n+    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n+                             Bundle savedInstanceState) {\n+        final View rootview = inflater.inflate(R.layout.fragment_main, container, false);\n+\n+        MainActivity activity = (MainActivity)getActivity();\n+        collectionURL = activity.collectionUrl; //get the list from the main activity\n+\n+        ////OnCLick Listener for SEARCH button\n+        final View search_but = rootview.findViewById(R.id.search_button);//Listener for search button\n+        search_but.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                EditText search_word = (EditText) getActivity().findViewById(R.id.search_text);//Text to be searched\n+                final String search_word_string = search_word.getText().toString();\n+\n+                //Handling the search and returning the results\n+                HttpHandler searchHandler = new HttpHandler(SearchFragment.this.getActivity(), SearchFragment.this);\n+                searchHandler.searchGoogle(search_word_string, new Callback() {\n+                    @Override\n+                    public void resultsCallback(ArrayList<String> urlArray) {\n+                        urlList = urlArray;\n+                        getImageFromURL();\n+                    }\n+                });\n+            }\n+        });\n+        //OnCLick Listener for PREV button\n+        final View next_but = rootview.findViewById(R.id.next_button);\n+        next_but.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                if (urlList.size()>0) {\n+                    if (urlIndex < urlList.size() - 1) {\n+                        urlIndex += 1;\n+                    } else {\n+                        urlIndex = 0;\n+                    }\n+                    getImageFromURL();\n+                }\n+            }\n+        });\n+        //OnCLick Listener for PREV button\n+        final View prev_but = rootview.findViewById(R.id.prev_button);\n+        prev_but.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                if (urlList.size() > 0) {\n+                    if (urlIndex >= 1) {\n+                        urlIndex -= 1;\n+                    } else {\n+                        urlIndex = urlList.size() - 1;\n+                    }\n+                    getImageFromURL();\n+                }\n+            }\n+        });\n+        //OnCLick Listener for ADD button\n+        final View add_but = rootview.findViewById(R.id.add_button);\n+        add_but.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                if (!collectionURL.contains(urlList.get(urlIndex))) {\n+                    mDbHelper = new CollDbHelper(getActivity().getBaseContext()); //initialize database\n+                    mDbHelper.writeDatabase(urlList.get(urlIndex));\n+\n+                    collectionURL.add(urlList.get(urlIndex));//Add it to collection\n+                    Toast.makeText(getActivity().getBaseContext(), \"Added\", Toast.LENGTH_SHORT).show();\n+                } else {\n+                    Toast.makeText(getActivity().getBaseContext(), \"Already in the collection\", Toast.LENGTH_LONG).show();\n+                }\n+            }\n+        });\n+        //OnCLick Listener for changing into COLLECTION fragment\n+        final View coll_but = rootview.findViewById(R.id.coll_button);\n+        coll_but.setOnClickListener(new View.OnClickListener() {\n+            @Override\n+            public void onClick(View v) {\n+                ((MainActivity) getActivity()).changeToColl();\n+            }\n+        });\n+        //Initializing WebView\n+        webImgView = (WebView) rootview.findViewById(R.id.webView);\n+        webImgView.loadUrl(getString(R.string.default_img));\n+        return rootview;\n+    }\n+\n+    //Handles updating the WebView\n+    public void getImageFromURL() {\n+        String urlToShow = urlList.get(urlIndex);\n+        webImgView.setWebViewClient(new WebViewClient());\n+        WebSettings settings = webImgView.getSettings();\n+        settings.setUseWideViewPort(true);\n+        settings.setLoadWithOverviewMode(true);\n+        \n+        try {\n+            webImgView.loadUrl(urlToShow);\n+            Log.i(\"PRINTER\", urlToShow);\n+        } catch (Exception ex) {\n+            ex.printStackTrace();\n+            Log.i(\"PRINTER\", \"WebView failed...\" + \"\\t\" + urlToShow);", "url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42187492", "created_at": "2015-10-15T22:10:50Z", "body": "Adding some indication that the loading failed to the loser could be useful as a UI decision.", "updated_at": "2015-10-15T22:10:50Z", "html_url": "https://github.com/OlinMobileProto/Lab2/pull/11#discussion_r42187492", "pull_request_url": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/11", "_links": {"self": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/comments/42187492"}, "html": {"href": "https://github.com/OlinMobileProto/Lab2/pull/11#discussion_r42187492"}, "pull_request": {"href": "https://api.github.com/repos/OlinMobileProto/Lab2/pulls/11"}}, "commit_id": "50d04ef222627d641da2bff4b887b5b4aa7fe0a3", "user": {"following_url": "https://api.github.com/users/dcelik/following{/other_user}", "events_url": "https://api.github.com/users/dcelik/events{/privacy}", "organizations_url": "https://api.github.com/users/dcelik/orgs", "url": "https://api.github.com/users/dcelik", "gists_url": "https://api.github.com/users/dcelik/gists{/gist_id}", "html_url": "https://github.com/dcelik", "subscriptions_url": "https://api.github.com/users/dcelik/subscriptions", "avatar_url": "https://avatars.githubusercontent.com/u/5778626?v=3", "repos_url": "https://api.github.com/users/dcelik/repos", "received_events_url": "https://api.github.com/users/dcelik/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/dcelik/starred{/owner}{/repo}", "site_admin": false, "login": "dcelik", "type": "User", "id": 5778626, "followers_url": "https://api.github.com/users/dcelik/followers"}, "path": "PhotoStream/app/src/main/java/com/example/siyer/photostream/SearchFragment.java", "position": 132, "original_commit_id": "50d04ef222627d641da2bff4b887b5b4aa7fe0a3", "id": 42187492}]